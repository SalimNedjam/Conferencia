[{"/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/index.js":"1","/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/serviceWorker.js":"2","/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/MainPage.js":"3","/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/Navigation.js":"4","/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/Accueil.js":"5","/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/Authentification.js":"6","/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/Forgot.js":"7","/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/MyProfile.js":"8","/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/Success.js":"9","/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/ShowProfile.js":"10","/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/Register.js":"11","/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/ChangePassword.js":"12","/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/SearchPage.js":"13","/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/Composants/Header.js":"14","/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/Composants/PostMessage.js":"15","/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/Composants/Messages.js":"16","/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/Composants/ListFriend.js":"17","/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/Composants/ProfileHeader.js":"18","/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/Composants/Stat.js":"19","/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/Composants/ListSearch.js":"20","/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/Composants/Search.js":"21","/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/Composants/PostRespond.js":"22","/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/Composants/ListApprove.js":"23","/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/Composants/Comments.js":"24","/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/Composants/ItemFriend.js":"25","/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/Composants/ItemApprove.js":"26","/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/components/Header.js":"27","/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/components/ConferenceList.js":"28"},{"size":517,"mtime":1610554462076,"results":"29","hashOfConfig":"30"},{"size":5737,"mtime":1610525251849,"results":"31","hashOfConfig":"30"},{"size":6489,"mtime":1610525251849,"results":"32","hashOfConfig":"30"},{"size":6785,"mtime":1610573239824,"results":"33","hashOfConfig":"30"},{"size":3033,"mtime":1610611918655,"results":"34","hashOfConfig":"30"},{"size":7914,"mtime":1610561315046,"results":"35","hashOfConfig":"30"},{"size":4763,"mtime":1610576784081,"results":"36","hashOfConfig":"30"},{"size":3466,"mtime":1610525251849,"results":"37","hashOfConfig":"30"},{"size":590,"mtime":1610525251849,"results":"38","hashOfConfig":"30"},{"size":4863,"mtime":1610525251849,"results":"39","hashOfConfig":"30"},{"size":5779,"mtime":1610574581009,"results":"40","hashOfConfig":"30"},{"size":6293,"mtime":1610561732638,"results":"41","hashOfConfig":"30"},{"size":2509,"mtime":1610525251849,"results":"42","hashOfConfig":"30"},{"size":1689,"mtime":1610525251849,"results":"43","hashOfConfig":"30"},{"size":2786,"mtime":1610525251849,"results":"44","hashOfConfig":"30"},{"size":10998,"mtime":1610525251849,"results":"45","hashOfConfig":"30"},{"size":2866,"mtime":1610525251849,"results":"46","hashOfConfig":"30"},{"size":1524,"mtime":1610525251849,"results":"47","hashOfConfig":"30"},{"size":4443,"mtime":1610525251849,"results":"48","hashOfConfig":"30"},{"size":1293,"mtime":1610525251849,"results":"49","hashOfConfig":"30"},{"size":1574,"mtime":1610525251849,"results":"50","hashOfConfig":"30"},{"size":1664,"mtime":1610525251849,"results":"51","hashOfConfig":"30"},{"size":1599,"mtime":1610525251849,"results":"52","hashOfConfig":"30"},{"size":8645,"mtime":1610525251849,"results":"53","hashOfConfig":"30"},{"size":1483,"mtime":1610525251849,"results":"54","hashOfConfig":"30"},{"size":2929,"mtime":1610525251849,"results":"55","hashOfConfig":"30"},{"size":1092,"mtime":1610573027094,"results":"56","hashOfConfig":"30"},{"size":1627,"mtime":1610576743781,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"jx1lc8",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"60"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"60"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"60"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"60"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"60"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"60"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"60"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"92"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"60"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"60"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"60"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"60"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"60"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"60"},"/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/index.js",[],["131","132"],"/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/serviceWorker.js",[],"/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/MainPage.js",[],"/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/Navigation.js",[],"/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/Accueil.js",["133"],"/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/Authentification.js",["134"],"/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, {Component} from \"react\";\nimport axios from 'axios';\nimport logo from './res/logo.png';\n\n\nexport default class Authentification extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            error: \"\",\n            checkbox: false\n        }\n\n    }\n\n    checkValidity() {\n\n        const params = new URLSearchParams();\n        params.append('user', this.inputLogin.value);\n        params.append('password', this.inputPassword.value);\n        params.append('root', this.state.checkbox ? \"true\" : \"false\");\n\n        axios.post(\"http://localhost:8080/Project_war/Login\", params)\n            .then(res => {\n                if (res.data.key !== undefined) {\n                    this.props.login(res.data.key);\n                }\n                else {\n                    if (res.data.code !== -1)\n                        this.setState({\n                            error: res.data.message\n                        });\n                    else\n                        this.setState({\n                            error: \"Veuillez remplir les champs\"\n                        })\n                }\n            })\n\n\n    }\n\n    render() {\n        return (\n            <div class=\"mt-5 container p-4 box box-auth\">\n                <form>\n                    <h1 class=\"mb-4\">Conferentia</h1>\n                    {this.state.error && \n                        <div class=\"alert alert-danger p-2\" role=\"alert\">\n                        {this.state.error}\n                        </div>\n                    }\n                    <div class=\"mb-4\">\n                        <label \n                            for=\"emailInput\" \n                            class=\"form-label\">\n                            Adresse mail\n                        </label>\n                        <input \n                            type=\"email\"\n                            name=\"login\"\n                            class=\"form-control\"\n                            id=\"emailInput\"\n                            ref={(inputLogin) => {\n                                this.inputLogin = inputLogin\n                            }}\n                            onKeyPress={\n                                event => {\n                                    if (event.key === \"Enter\")\n                                        this.checkValidity();\n                                }\n                            }\n                            aria-describedby=\"emailHelp\"/>\n                    </div>\n                    <div class=\"mb-3\">\n                        <label\n                            for=\"passwordInput\" \n                            class=\"form-label\">\n                            Mot de passe\n                        </label>\n                        <input \n                            type=\"password\"\n                            name=\"pwd\"\n                            class=\"form-control\"\n                            ref={(inputPassword) => {\n                                this.inputPassword = inputPassword\n                            }}\n                            onKeyPress={\n                                event => {\n                                    if (event.key === \"Enter\")\n                                        this.checkValidity();\n                                }\n                            }\n                            id=\"passwordInput\"/>\n                            <a onClick={() => this.props.forgot()}>\n                            Mot de passe oublié ?\n                        </a>\n                    </div>\n                    <div class=\"mb-3 form-check\">\n                        <input \n                            type=\"checkbox\" \n                            defaultChecked={this.state.checkbox}\n                            class=\"form-check-input\"\n                            onChange={() => this.setState({\n                                checkbox: !this.state.checkbox\n                            })}\n                            id=\"checkInput\"/>\n                        <label \n                            class=\"form-check-label\" \n                            for=\"checkInput\">\n                            Garder ma session active\n                        </label>\n                    </div>\n                    <div class=\"d-flex justify-content-center\">\n                        <button\n                            type=\"button\"\n                            name=\"connexion\"\n                            onClick={() => this.checkValidity()}\n                            class=\"btn btn-primary m-1\">\n                            Connexion\n                        </button>\n                        <button \n                            type=\"button\"\n                            name=\"signup\"\n                            onClick={() => this.props.signup()}\n                            class=\"btn btn-light m-1\">\n                            Inscription\n                        </button>\n                    </div>\n                </form>\n            </div>\n        );\n\n        return (\n            <div>\n\n                <div className=\"input_container\" id=\"connexion_main\">\n                    <div className=\"logos\">\n                        <a>\n                            <img src={logo} alt=\"\"/>\n                        </a>\n                    </div>\n                    <div>\n                        <span className=\"errors\">{this.state.error}</span>\n\n                        <input\n                            onKeyPress={\n                                event => {\n                                    if (event.key === \"Enter\")\n                                        this.checkValidity();\n                                }\n                            }\n                            ref={(inputLogin) => {\n                                this.inputLogin = inputLogin\n                            }}\n                            type=\"email\" name=\"login\" placeholder=\"Mail\"/>\n                        <input\n                            onKeyPress={\n                                event => {\n                                    if (event.key === \"Enter\")\n                                        this.checkValidity();\n                                }\n                            }\n                            ref={(inputPassword) => {\n                                this.inputPassword = inputPassword\n                            }}\n                            type=\"password\" name=\"pwd\" placeholder=\"Mot de passe\"/>\n                    </div>\n                    <div>\n                        <div className=\"Login\">\n                            <input type=\"submit\" name=\"connexion\" value=\"Suivant\" className=\"myButton\"\n                                   onClick={() => this.checkValidity()}/>\n                        </div>\n                        <div className=\"submits\">\n                            <div className=\"links\">\n                                <div id=\"link1\" className=\"link\">\n                                    <a onClick={() => this.props.signup()}>Pas encore inscrit\n                                        ?</a>\n                                </div>\n                                <div id=\"link2\" className=\"link\">\n                                    <a onClick={() => this.props.forgot()}>Mot de passe\n                                        perdu</a>\n                                </div>\n\n                            </div>\n                            <div>\n                                <input type=\"checkbox\" defaultChecked={this.state.checkbox}\n                                       onChange={() => this.setState({checkbox: !this.state.checkbox})}/>\n                                <span className=\"labels\">Garder ma session active</span>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n\n}\n","/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/Forgot.js",["135","136","137","138"],"import React, {Component} from \"react\";\nimport axios from 'axios'\nimport logo from './res/logo.png'\n\nexport default class Forgot extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            errors: {},\n\n        }\n    }\n\n    sendRequest() {\n        if (this.checkForm()) {\n            const formData = new URLSearchParams();\n            formData.append('email', this.inputEmail.value);\n\n            axios.get(\"http://localhost:8080/TwisterFinal/Reset?\" + formData);\n            this.props.forgotSuccess()\n        }\n\n    }\n\n    checkForm() {\n        let errors = {};\n        let formIsValid = true;\n\n        if (this.inputEmail.value === \"\") {\n            formIsValid = false;\n            errors[\"email\"] = \"Le champs ne peut être vide\";\n        }\n\n        this.setState({errors});\n        return formIsValid;\n    };\n\n    render() {\n        return (\n            <div class=\"container box box-auth mt-5 p-4 mb-5\">\n                <h2 class=\"mb-3\">Mot de passe oublié</h2>\n                \n                {this.state.errors[\"email\"] && \n                    <div class=\"alert alert-danger p-2\" role=\"alert\">\n                        {this.state.errors[\"email\"]}\n                    </div>\n                }\n\n                <div class=\"mb-3\">\n                    <label \n                        class=\"form-check-label\" \n                        for=\"emailInput\">\n                        Adresse e-mail\n                    </label>\n                    <input \n                        type=\"email\" \n                        class=\"form-control\"\n                        ref={(inputEmail) => {\n                            this.inputEmail = inputEmail\n                        }}\n                        onKeyPress={\n                            event => {\n                                if (event.key === \"Enter\")\n                                    this.sendRequest();\n                            }\n                        }\n                        id=\"emailInput\"/>\n                </div>\n\n                <div class=\"d-flex justify-content-center\">\n                    <button \n                        type=\"button\"\n                        name=\"singup\"\n                        onClick={() => this.props.signin()}\n                        class=\"btn btn-light m-1\">\n                        Annuler\n                    </button>\n                    <button \n                        type=\"button\"\n                        name=\"change\"\n                        onClick={() => this.props.changePassword()}\n                        class=\"btn btn-light m-1\">\n                        Changer de mot de passe\n                    </button>\n                    <button\n                        type=\"button\"\n                        name=\"connexion\"\n                        onClick={() => this.sendRequest()}\n                        class=\"btn btn-primary m-1\">\n                        Suivant\n                    </button>\n                </div>\n            </div>\n        );\n\n        return (\n            <div className=\"Forgot\">\n                <div className=\"input_container\">\n                    <div className=\"logos\">\n                        <a>\n                            <img src={logo} onClick={() => this.props.signin()} alt=\"\"/>\n                        </a>\n                    </div>\n                    <div>\n                        <span className=\"errors\">{this.state.errors[\"email\"]}</span>\n\n                        <input\n                            onKeyPress={\n                                event => {\n                                    if (event.key === \"Enter\")\n                                        this.sendRequest();\n                                }\n                            }\n                            ref={(inputEmail) => {\n                                this.inputEmail = inputEmail\n                            }}\n                            type=\"text\" name=\"login\" placeholder=\"Adresse e-mail\"/>\n\n                    </div>\n                    <div>\n                        <input type=\"submit\" name=\"connexion\" value=\"Suivant\" className=\"myButton\"\n                               onClick={() => this.sendRequest()}/>\n                        <div className=\"links\">\n                            <a onClick={() => this.props.signin()}>Revenir à\n                                l'authentification</a>\n                            <div id=\"link3\" className=\"link\">\n                                <a className=\"ChangePasswordLink\" onClick={() => this.props.changePassword()}>Changer de\n                                    mot de passe</a>\n                            </div>\n\n                        </div>\n\n                    </div>\n                </div>\n\n\n            </div>\n\n\n        );\n\n    }\n\n\n}\n","/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/MyProfile.js",[],"/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/Success.js",["139","140"],"import React, {Component} from \"react\";\n\nexport default class Success extends Component {\n\n    constructor(props) {\n        super(props);\n\n    }\n\n    render() {\n        return (\n            <div className=\"SuccessForgot\">\n                <div className=\"input_container\">\n                    <div>{this.props.message}</div>\n                    <div className=\"links\">\n                        <a onClick={() => this.props.signin()}>Revenir à\n                            l'authentification</a>\n\n                    </div>\n\n                </div>\n\n\n            </div>\n\n\n        );\n\n    }\n\n\n}\n","/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/ShowProfile.js",[],"/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/Register.js",[],"/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/ChangePassword.js",["141","142"],"import React, {Component} from \"react\";\nimport axios from 'axios'\nimport logo from './res/logo.png'\n\nconst FORM = {\n    lgin: {\n        mandatory: true,\n        name: 'email',\n        type: 'email',\n        label: \"Adresse mail\",\n    },\n    password: {\n        mandatory: true,\n        name: 'pass',\n        type: 'password',\n        label: \"Mot de passe\",\n        minLength: 6,\n    },\n    newPassword: {\n        mandatory: true,\n        name: 'pass',\n        type: 'password',\n        label: \"Mot de passe\",\n        minLength: 6,\n    },\n}\n\n\nexport default class ChangePassword extends Component {\n\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            errors: {},\n            text: true\n        }\n\n        this.inputs = [];\n    }\n\n    sendRequest() {\n        if (this.handleValidation()) {\n            const params = new URLSearchParams();\n\n            for (let index in Object.keys(FORM)) {\n                index = Object.keys(FORM)[index];\n                params.append(index, this.inputs[index].value);\n            }\n\n            params.append('login', this.inputLogin.value);\n            params.append('password', this.inputPassword.value);\n            params.append('newPassword', this.inputNewPassword.value);\n\n            axios.post(\"http://localhost:8080/TwisterFinal/Reset\", params)\n                .then(res => {\n                    if (res.data.code === undefined)\n                        this.props.resetSuccess();\n                    else {\n                        let errors = {};\n                        errors[\"serverError\"] = res.data.message;\n                        this.setState({\n                            errors: errors\n                        })\n                    }\n\n                });\n        }\n    }\n\n    checkForm() {\n        let errors = {};\n        let formIsValid = true;\n\n        for (let index in Object.keys(FORM)) {\n            index = Object.keys(FORM)[index];\n            let item = FORM[index];\n            if (item.mandatory && this.inputs[index].value === \"\") {\n                errors[index] = \"Le champ ne peut être vide\";\n                formIsValid = false;\n            } else if (item.regex && !this.inputs[index].value.match(item.regex)) {\n                this.inputs[index].value = \"\";\n                formIsValid = false;\n                errors[index] = \"Uniquement des caractères\";\n            } else if (item.minLength && this.inputs[index].value.length < item.minLength) {\n                this.inputs[index].value = \"\";\n                formIsValid = false;\n                errors[index] = `Minimum ${item.minLength} caractères`;\n            }\n        }\n\n        this.setState({errors});\n        return formIsValid;\n    }\n\n\n    handleValidation() {\n        let errors = {};\n        let formIsValid = true;\n\n        //login\n        if (this.inputLogin.value === \"\") {\n            formIsValid = false;\n            errors[\"login\"] = \"Login: Cannot be empty\";\n        }\n\n        //password\n        if (this.inputPassword.value === \"\") {\n            formIsValid = false;\n            errors[\"password\"] = \"Password: Cannot be empty\";\n        }\n\n        //password\n        if (this.inputNewPassword.value === \"\") {\n            formIsValid = false;\n            errors[\"newPassword\"] = \"Password: Cannot be empty\";\n        }\n        else if (this.inputNewPassword.value.length < 6) {\n            this.inputNewPassword.value = \"\";\n            formIsValid = false;\n            errors[\"newPassword\"] = \"Password: Too short, the minimum is 6 letters\";\n        }\n\n\n        this.setState({errors: errors});\n        return formIsValid;\n    };\n\n\n    render() {\n\n        return (\n            <div className=\"input_container\">\n                <div className=\"logos\">\n                    <a>\n                        <img src={logo} onClick={() => this.props.signin()} alt=\"\"/>\n                    </a>\n                </div>\n                <div className=\"register\">\n                    <span className=\"errors\">{this.state.errors[\"serverError\"]}</span>\n\n                    <span className=\"errors\">{this.state.errors[\"login\"]}</span>\n\n                    <input\n                        onKeyPress={\n                            event => {\n                                if (event.key === \"Enter\")\n                                    this.sendRequest();\n                            }\n                        }\n                        ref={(inputLogin) => {\n                            this.inputLogin = inputLogin\n                        }}\n                        type=\"text\" name=\"login\" placeholder=\"Login ou adresse e-mail\"/>\n\n                    <span className=\"errors\">{this.state.errors[\"password\"]}</span>\n\n                    <input\n                        onKeyPress={\n                            event => {\n                                if (event.key === \"Enter\")\n                                    this.sendRequest();\n                            }\n                        }\n                        ref={(inputPassword) => {\n                            this.inputPassword = inputPassword\n                        }}\n                        type=\"password\" name=\"pass\" placeholder=\"Ancien mot de passe\"/>\n\n\n                    <span className=\"errors\">{this.state.errors[\"newPassword\"]}</span>\n\n                    <input\n                        onKeyPress={\n                            event => {\n                                if (event.key === \"Enter\")\n                                    this.sendRequest();\n                            }\n                        }\n                        ref={(inputNewPassword) => {\n                            this.inputNewPassword = inputNewPassword\n                        }}\n                        type=\"password\" name=\"pass\" placeholder=\"Nouveau mot de passe\"/>\n\n\n                    <div>\n                        <input type=\"submit\" name=\"inscription\" value=\"Suivant\" className=\"myButton\"\n                               onClick={() => this.sendRequest()}/>\n\n                        <div className=\"links\">\n                            <a onClick={() => this.props.signin()}>Revenir à\n                                l'authentification ? </a>\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        );\n    }\n\n\n}\n","/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/SearchPage.js",[],"/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/Composants/Header.js",["143","144","145","146"],"import React, {Component} from \"react\";\nimport Search from \"./Search\";\nimport logo from '../res/logo.png'\nimport '../Styles/Head.css'\nimport axios from 'axios'\nimport {read_cookie} from \"sfcookies\";\nimport logo2 from '../res/logo2.png'\nimport logo3 from '../res/logo3.png'\n\nexport default class Header extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            file: logo,\n        };\n\n    }\n\n    componentDidMount() {\n        window.addEventListener(\"resize\", this.resize.bind(this));\n        this.resize();\n    }\n\n    resize() {\n        if (window.innerWidth > 700) {\n            this.setState({file: logo});\n\n        }\n        else if (window.innerWidth > 600) {\n            this.setState({file: logo2});\n\n        }\n        else {\n            this.setState({file: logo3});\n\n        }\n\n    }\n\n    disconnect() {\n\n        const params = new URLSearchParams();\n        params.append('key', read_cookie(\"key\"));\n\n        axios.post(\"http://localhost:8080/Project_war/Logout\", params)\n            .then(() => {\n                    this.props.logout()\n\n                }\n            );\n\n\n    }\n\n    render() {\n\n\n        return (<div className=\"Head\">\n            <div className=\"logo\">\n                <a onClick={() => this.props.getaccueil()}>\n                    <img src={this.state.file} alt=\"\"/>\n                </a>\n            </div>\n            <div className=\"liens\">\n                <a className=\"separatedLink\"\n                   onClick={() => this.props.getprofile()}>{this.props.prenomUser} {this.props.nomUser}</a>\n                <a onClick={() => this.disconnect()}>Déconnexion</a>\n            </div>\n        </div>);\n\n\n    }\n\n\n}\n",["147","148"],"/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/Composants/PostMessage.js",["149","150"],"import React, {Component} from \"react\";\nimport \"../Styles/PostMessage.css\"\nimport axios from 'axios'\nimport {read_cookie} from \"sfcookies\";\nimport addpicture from \"../res/picture.jpg\"\n\nexport default class PostMessage extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            publication: null,\n            file: null\n        }\n    }\n\n    postTwist() {\n\n        if (this.inputContent.textContent !== \"\") {\n\n\n            const formData = new URLSearchParams();\n            formData.append('key', read_cookie(\"key\"));\n            formData.append('content', this.inputContent.textContent);\n            formData.append('op', \"message\");\n            if (this.state.publication !== null)\n                formData.append('photo', this.state.publication);\n\n\n            this.inputContent.textContent = \"\";\n\n            axios.post(\"http://localhost:8080/TwisterFinal/Messages\", formData)\n                .then(() => {\n                    if (this.props.reload !== undefined) {\n                        this.props.reload();\n                    }\n                    this.setState({\n                        publication: null,\n                        file: null\n                    })\n                });\n\n\n        }\n\n\n    }\n\n    onChange(event) {\n        this.setState({\n            file: event.target.files[0]\n        });\n        if (event.target.files && event.target.files[0]) {\n            let reader = new FileReader();\n            reader.onload = (e) => {\n\n                this.setState({\n                    publication: e.target.result\n                });\n            };\n            reader.readAsDataURL(event.target.files[0]);\n        }\n\n    }\n\n\n    render() {\n        return (<div className=\"PostMessage\">\n            <div className=\"labels\">\n                Postez un message\n            </div>\n            {\n                this.state.publication &&\n                <div className=\"photo\">\n                    <a><img src={this.state.publication} alt=\"\"/></a>\n                </div>\n            }\n            <div onKeyPress={\n                event => {\n                    if (event.key === \"Enter\")\n                        this.postTwist();\n                }\n            }\n                 ref={(inputContent) => {\n                     this.inputContent = inputContent\n                 }}\n                 contentEditable=\"true\" className=\"newMessage\"/>\n            <label htmlFor=\"uploader\" className=\"pictureUpload\"><img src={addpicture}/></label>\n            <input className=\"input-file\" id=\"uploader\" type=\"file\" name=\"myImage\" accept=\"image/*\"\n                   onChange={(e) => this.onChange(e)}/>\n            <input type=\"submit\" className=\"myButton\" value=\"Publier\" onClick={() => this.postTwist()}/>\n        </div>);\n\n    }\n\n\n}\n","/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/Composants/Messages.js",["151","152","153","154","155","156","157","158","159","160","161"],"import React, {Component} from \"react\";\nimport PostRespond from \"./PostRespond\";\nimport Comments from \"./Comments\";\nimport '../Styles/Articles.css'\nimport profile from '../res/profile.png'\nimport {read_cookie} from \"sfcookies\";\nimport axios from 'axios'\n\nexport function timeSince(time) {\n\n\n    switch (typeof time) {\n        case 'number':\n            break;\n        case 'string':\n            time = +new Date(time);\n            break;\n        case 'object':\n            if (time.constructor === Date) time = time.getTime();\n            break;\n        default:\n            time = +new Date();\n    }\n    const time_formats = [\n        [60, 'secondes', 1],\n        [120, 'une minute'],\n        [3600, 'minutes', 60],\n        [7200, 'une heure'],\n        [86400, 'heures', 3600],\n        [172800, 'un jour'],\n        [604800, 'jours', 86400],\n        [1209600, 'semaine'],\n        [2419200, 'semaines', 604800],\n        [4838400, 'un mois'],\n        [29030400, 'mois', 2419200],\n        [58060800, 'un an'],\n        [2903040000, 'ans', 29030400],\n\n    ];\n    const seconds = (+new Date() - time) / 1000,\n        token = 'il y a ',\n        list_choice = 1;\n\n    if (seconds < 5) {\n        return 'Maintenant'\n    }\n\n    let i = 0,\n        format;\n    while (format = time_formats[i++])\n        if (seconds < format[0]) {\n            if (typeof format[2] !== 'number')\n                return token + format[list_choice];\n            else\n                return token + Math.floor(seconds / format[2]) + ' ' + format[1];\n        }\n    return time;\n\n}\n\nexport default class Messages extends Component {\n\n    constructor(props) {\n        super(props);\n\n\n        let articles = [];\n\n        if (this.props.listComment !== undefined) {\n            articles = this.props.listComment;\n        }\n\n        this.state = {\n            date: this.props.date,\n            idUser: this.props.idUser,\n            id: this.props.id,\n            publication: this.props.publication,\n            file: null,\n            writeComment: false,\n            likeUsers: [],\n            likes: this.props.likes,\n            liked: this.props.likes ? this.props.likes.some(idLike => idLike === this.props.idUser) : false,\n            showComments: false,\n            articles: articles\n        }\n\n    }\n\n\n    componentWillReceiveProps(nextProps) {\n        if (this.props.listComment !== undefined) {\n            this.setState({\n                articles: nextProps.listComment\n            });\n        }\n        this.setState({\n            idUser: nextProps.idUser,\n            id: nextProps.id,\n            date: nextProps.date,\n        })\n\n    }\n\n\n    onError() {\n        this.setState({\n            image: profile\n        })\n    }\n\n    componentDidMount() {\n        const params = new URLSearchParams();\n        params.append('key', read_cookie(\"key\"));\n        params.append('id', this.props.id);\n\n        axios.get(\"http://localhost:8080/TwisterFinal/Image?\" + params)\n            .then(res => {\n                this.setState({\n                    image: res.data\n                })\n            });\n        this.getLikesUsers();\n    }\n\n\n    doLike() {\n        if (!this.state.liked) {\n            const params = new URLSearchParams();\n            params.append('key', read_cookie(\"key\"));\n            params.append('idMessage', this.props.messageId);\n            params.append('op', \"like\");\n\n            axios.post(\"http://localhost:8080/TwisterFinal/Messages\", params)\n                .then(res => {\n                    if (res.data.state === \"OK\") {\n                        const array = this.state.likes;\n                        const index = array.indexOf(this.props.idUser);\n                        if (index === -1) {\n                            array.push(this.props.idUser);\n                            this.setState({\n                                likes: array,\n                                liked: !this.state.liked\n                            });\n                        }\n                        this.getLikesUsers()\n                    }\n                });\n        }\n        else {\n            const params = new URLSearchParams();\n            params.append('key', read_cookie(\"key\"));\n            params.append('idMessage', this.props.messageId);\n            params.append('op', \"dislike\");\n            axios.post(\"http://localhost:8080/TwisterFinal/Messages\", params)\n                .then(res => {\n                    console.log(res.data.state);\n                    if (res.data.state === \"OK\") {\n                        const array = this.state.likes;\n                        const index = array.indexOf(this.props.idUser);\n                        if (index !== -1) {\n                            array.splice(index, 1);\n                            this.setState({\n                                likes: array,\n                                liked: !this.state.liked\n                            });\n                        }\n                        this.getLikesUsers()\n\n                    }\n                });\n        }\n    }\n\n    removeMessage() {\n        if (this.state.idUser === this.state.id) {\n            const params = new URLSearchParams();\n            params.append('key', read_cookie(\"key\"));\n            params.append('idMessage', this.props.messageId);\n            params.append('op', \"del\");\n\n            axios.post(\"http://localhost:8080/TwisterFinal/Messages\", params)\n                .then(res => {\n                    if (res.data.state === \"OK\") {\n                        this.props.reload();\n                    }\n                });\n        }\n\n    }\n\n    getLikesUsers() {\n        this.setState({likeUsers: []});\n        this.state.likes.map((id) => {\n            const params = new URLSearchParams();\n            params.append('key', read_cookie(\"key\"));\n            params.append('idUser', id);\n\n            axios.post(\"http://localhost:8080/TwisterFinal/Login\", params)\n                .then(res => {\n                    const Array = this.state.likeUsers;\n                    Array.push(res.data);\n                    this.setState({likeUsers: Array})\n                })\n        })\n    }\n\n    render() {\n\n\n        return (<div className=\"Articles\">\n\n                {\n                    this.state.idUser === this.state.id &&\n                    <a className=\"close\" onClick={() => this.removeMessage()}>✕</a>\n                }\n                <div className=\"infos\">\n                    <a\n                        onClick={() => this.props.getuserprofile(this.props.id, this.props.login, this.props.name, this.props.lastname)}>\n                        <img className=\"profile\" onError={this.onError.bind(this)} src={this.state.image}/>\n                    </a>\n\n                    <a className=\"name\"\n                       onClick={() => this.props.getuserprofile(this.props.id, this.props.login, this.props.name, this.props.lastname)}>\n\n                        {this.props.name} {this.props.lastname}\n                    </a>\n\n                    <div className=\"username\">\n                        @{this.props.login} •\n                        <label className=\"date\">\n                            {timeSince(new Date(this.state.date))}\n                        </label>\n                    </div>\n\n                </div>\n                <div className=\"content\">\n                    {this.props.content}\n                </div>\n                {\n                    this.state.publication &&\n                    <div className=\"photo\">\n                        <a href={this.state.publication}><img src={this.state.publication} alt=\"\"/></a>\n                    </div>\n                }\n\n                <div className=\"Reaction\">\n                    <a onClick={() => this.doLike()}\n                       className=\"inlined\">{this.state.liked ? \"Je n'aime plus\" : \"J'aime\"}</a>\n                    <a\n                        onClick={() => this.setState({writeComment: !this.state.writeComment})}\n                        className=\"inlined\">Commenter</a>\n\n                    <a className=\"showComments\"\n                       onClick={() => this.setState({showComments: !this.state.showComments})}>\n                        {this.state.articles.length > 0 && this.state.articles.length + ' Commentaire(s)'}\n                    </a>\n                    <br/>\n\n\n                    {\n                        <div className=\"dropdown\">\n                            {\n                                this.state.likes.length > 0 &&\n                                <a className=\"dropbtn\"\n                                   onClick={() => this.setState({showList: !this.state.showList})}> {this.state.likes.length + ' Like(s)'}</a>\n\n                            }\n                            {\n                                this.state.showList &&\n\n                                <div className=\"dropdown-content\">\n                                    {\n\n                                        this.state.likeUsers.map((user) =>\n                                            <a\n                                                className=\"name\"\n                                                onClick={() => this.props.getuserprofile(user.user, user.login, user.nom, user.prenom)}\n                                            >\n                                                {user.prenom} {user.nom}\n                                            </a>)\n\n                                    }\n\n                                </div>\n                            }\n\n                        </div>\n                    }\n\n\n                </div>\n\n\n                {\n                    this.state.showComments && this.state.articles.length > 0 &&\n                    <div className=\"Comments\">\n                        {this.state.articles.map((article) => (\n                            <Comments\n                                date={article.date}\n                                idUser={this.props.idUser}\n                                getuserprofile={this.props.getuserprofile}\n                                parentId={this.props.messageId}\n                                name={article.author.prenom}\n                                id={article.author.user_id}\n                                lastname={article.author.nom}\n                                login={article.author.login}\n                                content={article.message}\n                                listComment={article.comments}\n                                messageId={article.message_id}\n                                likes={article.likes}\n                                key={article.message_id}\n                                reload={this.props.reload}\n                            />\n                        ))}\n                    </div>\n                }\n                {\n                    this.state.writeComment &&\n                    <PostRespond reload={this.props.reload} parentId={this.props.messageId} parentCom={this}/>\n                }\n            </div>\n        );\n\n\n    }\n\n\n}\n","/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/Composants/ListFriend.js",[],"/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/Composants/ProfileHeader.js",[],"/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/Composants/Stat.js",["162","163","164"],"import React, {Component} from \"react\";\nimport '../Styles/Stat.css'\nimport {read_cookie} from \"sfcookies\";\nimport axios from 'axios'\nimport ListApprove from \"./ListApprove\";\n\nexport default class Stat extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            twist: this.props.twists,\n            followers: null,\n            following: null,\n            isFriend: true,\n            isRequested: false\n        }\n    }\n\n\n    componentWillReceiveProps(nextProps) {\n        this.setState({\n            twist: nextProps.twists,\n            isFriend: nextProps.isFriend,\n            isRequested: nextProps.isRequested\n        })\n\n    }\n\n    componentDidMount() {\n        const params1 = new URLSearchParams();\n\n        params1.append('key', read_cookie(\"key\"));\n        params1.append('op', \"follower\");\n\n        axios.get(\"http://localhost:8080/TwisterFinal/Friends?\" + params1)\n            .then(res => {\n                this.setState(() => {\n                    return {followers: res.data.Array};\n                });\n\n            });\n\n\n        const params2 = new URLSearchParams();\n\n        params2.append('key', read_cookie(\"key\"));\n        params2.append('op', \"following\");\n\n        axios.get(\"http://localhost:8080/TwisterFinal/Friends?\" + params2)\n            .then(res => {\n                this.setState(() => {\n                    return {following: res.data.Array};\n                });\n\n            });\n\n\n        if (this.props.idShow !== undefined) {\n            const params3 = new URLSearchParams();\n\n            params3.append('key', read_cookie(\"key\"));\n            params3.append('op', \"requested\");\n            params3.append('id', this.props.idShow);\n\n\n            axios.post(\"http://localhost:8080/TwisterFinal/Friends?\", params3)\n                .then(res => {\n                    this.setState({\n                        isFriend: res.data.isFriend,\n                        isRequested: res.data.isRequested\n\n                    });\n                });\n        }\n\n    }\n\n\n    sendRequest() {\n        const params = new URLSearchParams();\n\n        params.append('key', read_cookie(\"key\"));\n        params.append('op', \"req\");\n        params.append('id', this.props.idShow);\n\n        axios.post(\"http://localhost:8080/TwisterFinal/Friends?\", params)\n            .then(() => {\n                this.setState({\n                    isRequested: true\n                });\n\n            });\n    }\n\n    removeFriend() {\n        const params = new URLSearchParams();\n\n        params.append('key', read_cookie(\"key\"));\n        params.append('id', this.props.idShow);\n        params.append('op', \"del\");\n\n\n        axios.post(\"http://localhost:8080/TwisterFinal/Friends?\", params)\n            .then(() => {\n                this.setState({\n                    isFriend: false\n                });\n            });\n    }\n\n    getRequestSection() {\n        if (this.props.getuserprofile !== undefined) {\n            return <ListApprove getuserprofile={this.props.getuserprofile}/>\n\n        }\n        else {\n            if (!this.state.isFriend) {\n                if (!this.state.isRequested) {\n                    return <div className=\"sendRequest\">\n                        <a onClick={() => this.sendRequest()}>Suivre ce profil</a>\n                    </div>\n                }\n                else {\n                    return <div className=\"sendRequest\">\n                        <a>Demande envoyé</a>\n                    </div>\n                }\n            }\n            else {\n                return <div className=\"sendRequest\">\n                    <a onClick={() => this.removeFriend()}>Se désabonner</a>\n                </div>\n            }\n        }\n\n    }\n\n    render() {\n\n\n        return (<div className=\"Stat\">\n            <div className=\"head\"> Statistiques</div>\n\n            <div className=\"twist\">\n                Nombre de twists: {this.state.twist}\n            </div>\n            {\n                this.state.followers &&\n                <div className=\"follower\">\n                    Nombre d'abonnés: {this.state.followers.length}\n                </div>\n            }\n            {\n                this.state.following &&\n                <div className=\"following\">\n                    Nombre d'abonnements: {this.state.following.length}\n                </div>\n\n            }\n\n            {\n                this.getRequestSection()\n            }\n\n        </div>);\n\n\n    }\n\n\n}\n","/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/Composants/ListSearch.js",[],"/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/Composants/Search.js",["165"],"import React, {Component} from \"react\";\nimport \"../Styles/Recherche.css\"\nimport {read_cookie} from \"sfcookies\";\nimport axios from 'axios'\n\nexport default class Search extends Component {\n\n    constructor(props) {\n        super(props);\n\n\n    }\n\n    handleSearch() {\n        if (!(this.inputSearch.value === \"\")) {\n            const params1 = new URLSearchParams();\n\n            params1.append('key', read_cookie(\"key\"));\n            params1.append('query', this.inputSearch.value);\n            axios.post(\"http://localhost:8080/TwisterFinal/Search?\", params1)\n                .then(res => {\n                    this.inputSearch.value = \"\";\n                    this.props.doSearch(res.data[1].Users, res.data[0].Messages[0])\n                });\n\n        }\n    }\n\n\n    render() {\n\n        return (\n\n            <div className=\"Recherche\">\n                <div className=\"inlined\">\n                    <input\n                        onKeyPress={event => {\n                            if (event.key === \"Enter\")\n                                this.handleSearch();\n\n                        }\n                        }\n\n                        ref={(inputSearch) => {\n                            this.inputSearch = inputSearch\n                        }}\n                        type=\"text\" className=\"search\"/>\n                </div>\n                <div className=\"inlined\">\n                    <input type=\"submit\" className=\"myButton\" value=\"Search\" onClick={() => this.handleSearch()\n                    }/>\n\n                </div>\n            </div>\n\n\n        );\n\n\n    }\n\n\n}\n","/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/Composants/PostRespond.js",["166"],"import React, {Component} from \"react\";\nimport \"../Styles/RespondItem.css\"\nimport axios from 'axios'\nimport {read_cookie} from \"sfcookies\";\n\nexport default class PostRespond extends Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    postComment() {\n        if (this.inputContent.textContent !== \"\") {\n            const params = new URLSearchParams();\n\n            params.append('key', read_cookie(\"key\"));\n            params.append('content', this.inputContent.textContent);\n            params.append('op', \"comment\");\n            params.append('idMessage', this.props.parentId);\n\n\n            axios.post(\"http://localhost:8080/TwisterFinal/Messages\", params)\n                .then(() => {\n                    this.inputContent.textContent = \"\";\n\n                    if (this.props.reload !== undefined) {\n                        this.props.parentCom.setState({\n                            writeComment: false,\n                            showComments: true\n                        });\n                        this.props.reload();\n                    }\n                });\n        }\n    }\n\n    render() {\n        return (<div className=\"RespondItem\">\n            <div onKeyPress={\n                event => {\n                    if (event.key === \"Enter\")\n                        this.postComment();\n                }\n            }\n                 ref={(inputContent) => {\n                     this.inputContent = inputContent\n                 }}\n                 contentEditable=\"true\" className=\"newMessage\"/>\n            <input type=\"submit\" className=\"myButton\" value=\"Send\" onClick={() => this.postComment()}/>\n        </div>);\n\n    }\n\n\n}\n","/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/Composants/ListApprove.js",[],"/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/Composants/Comments.js",["167","168","169","170","171","172","173","174","175","176","177"],"import React, {Component} from \"react\";\nimport PostRespond from \"./PostRespond\";\nimport '../Styles/Comment.css'\nimport profile from '../res/profile.png'\nimport {read_cookie} from \"sfcookies\";\nimport axios from 'axios'\nimport {timeSince} from \"./Messages\";\n\nexport default class Comments extends Component {\n\n    constructor(props) {\n        super(props);\n\n        let comments = [];\n\n        if (this.props.listComment !== undefined) {\n            comments = this.props.listComment;\n        }\n        this.state = {\n            date: this.props.date,\n            idUser: this.props.idUser,\n            id: this.props.id,\n            file: null,\n            writeComment: false,\n            likes: this.props.likes ? this.props.likes : [],\n            likeUsers: [],\n            liked: this.props.likes ? this.props.likes.some(idLike => idLike === this.props.idUser) : false,\n            comments: comments,\n            showComments: false\n        }\n\n    }\n\n    componentWillReceiveProps(nextProps) {\n\n\n        if (this.props.listComment !== undefined) {\n            this.setState({\n                comments: nextProps.listComment\n            });\n        }\n        this.setState({\n            idUser: nextProps.idUser,\n            id: nextProps.id,\n            date: nextProps.date,\n\n        })\n\n    }\n\n    componentDidMount() {\n        const params = new URLSearchParams();\n        params.append('key', read_cookie(\"key\"));\n        params.append('id', this.props.id);\n\n        axios.get(\"http://localhost:8080/TwisterFinal/Image?\" + params)\n            .then(res => {\n                this.setState({\n                    image: res.data\n                })\n            });\n        this.getLikesUsers();\n\n    }\n\n    onError() {\n        this.setState({\n            image: profile\n        })\n    }\n\n    getLikesUsers() {\n        this.setState({likeUsers: []});\n        this.state.likes.map((id) => {\n            const params = new URLSearchParams();\n            params.append('key', read_cookie(\"key\"));\n            params.append('idUser', id);\n\n            axios.post(\"http://localhost:8080/TwisterFinal/Login\", params)\n                .then(res => {\n                    const Array = this.state.likeUsers;\n                    Array.push(res.data);\n                    this.setState({likeUsers: Array})\n                })\n        })\n    }\n\n    doLike() {\n        if (!this.state.liked) {\n            const params = new URLSearchParams();\n            params.append('key', read_cookie(\"key\"));\n            params.append('idMessage', this.props.messageId);\n            params.append('op', \"like\");\n\n            axios.post(\"http://localhost:8080/TwisterFinal/Messages\", params)\n                .then(res => {\n                    console.log(res.data.state);\n                    if (res.data.state === \"OK\") {\n                        const array = this.state.likes;\n                        const index = array.indexOf(this.props.idUser);\n                        if (index === -1) {\n                            array.push(this.props.idUser);\n                            this.setState({\n                                likes: array,\n                                liked: !this.state.liked\n                            });\n                        }\n                        this.getLikesUsers()\n\n                    }\n                });\n        }\n        else {\n            const params = new URLSearchParams();\n            params.append('key', read_cookie(\"key\"));\n            params.append('idMessage', this.props.messageId);\n            params.append('op', \"dislike\");\n            axios.post(\"http://localhost:8080/TwisterFinal/Messages\", params)\n                .then(res => {\n                    if (res.data.state === \"OK\") {\n                        const array = this.state.likes;\n                        const index = array.indexOf(this.props.idUser);\n                        if (index !== -1) {\n                            array.splice(index, 1);\n                            this.setState({\n                                likes: array,\n                                liked: !this.state.liked\n                            });\n                        }\n\n                    }\n                    this.getLikesUsers()\n\n                });\n        }\n    }\n\n    removeMessage() {\n        if (this.state.idUser === this.state.id) {\n            const params = new URLSearchParams();\n            params.append('key', read_cookie(\"key\"));\n            params.append('idMessage', this.props.messageId);\n            params.append('op', \"del\");\n\n            axios.post(\"http://localhost:8080/TwisterFinal/Messages\", params)\n                .then(res => {\n                    if (res.data.state === \"OK\") {\n                        this.props.reload();\n                    }\n                });\n        }\n\n    }\n\n    render() {\n        return (<div className=\"Comment\">\n            {\n                this.state.idUser === this.state.id &&\n                <a className=\"close\" onClick={() => this.removeMessage()}>✕</a>\n            }\n\n            <div className=\"infos\">\n                <a\n                    onClick={() => this.props.getuserprofile(this.props.id, this.props.login, this.props.name, this.props.lastname)}>\n                    <img onError={this.onError.bind(this)} src={this.state.image}/>\n                </a>\n\n                <a className=\"name\"\n                   onClick={() => this.props.getuserprofile(this.props.id, this.props.login, this.props.name, this.props.lastname)}>\n                    {this.props.name} {this.props.lastname}\n                </a>\n\n                <div className=\"username\">\n                    @{this.props.login} •\n                    <a className=\"date\">\n\n                        {timeSince(new Date(this.state.date))}\n                    </a>\n                </div>\n            </div>\n            <div className=\"content\">\n                {this.props.content}\n            </div>\n            <div className=\"Reaction\">\n                <a onClick={() => this.doLike()}\n                   className=\"inlined\">{this.state.liked ? \"Je n'aime plus\" : \"J'aime\"}</a>\n                <a\n                    onClick={() => this.setState({writeComment: !this.state.writeComment})}\n                    className=\"inlined\">Commenter</a>\n\n                <a className=\"showComments\"\n                   onClick={() => this.setState({showComments: !this.state.showComments})}>\n                    {this.state.comments.length > 0 && this.state.comments.length + ' Commentaire(s)'}\n                </a>\n\n                {\n                    <div className=\"dropdown\">\n                        {\n                            this.state.likes.length > 0 &&\n                            <a className=\"dropbtn\"\n                               onClick={() => this.setState({showList: !this.state.showList})}> {this.state.likes.length + ' Like(s)'}</a>\n\n                        }\n                        {\n                            this.state.showList &&\n\n                            <div className=\"dropdown-content\">\n                                {\n                                    this.state.likeUsers.map((user) => <a>{user.nom} {user.prenom}</a>)\n\n                                }\n\n                            </div>\n                        }\n\n                    </div>\n                }\n\n\n            </div>\n\n            {\n                this.state.showComments && this.state.comments.length > 0 &&\n                <div className=\"Comments\">\n                    {this.state.comments.map((article) => (\n                        <Comments\n                            date={article.date}\n                            idUser={this.props.idUser}\n                            getuserprofile={this.props.getuserprofile}\n                            parentId={this.props.messageId}\n                            name={article.author.prenom}\n                            id={article.author.user_id}\n                            lastname={article.author.nom}\n                            login={article.author.login}\n                            content={article.message}\n                            listComment={article.comments}\n                            messageId={article.message_id}\n                            likes={article.likes}\n                            key={article.message_id}\n                            reload={this.props.reload}\n\n                        />\n                    ))}\n                </div>\n            }\n\n            {this.state.writeComment &&\n            <PostRespond reload={this.props.reload} parentId={this.props.messageId}\n                         parentCom={this}/>}\n\n        </div>);\n\n\n    }\n\n\n}\n","/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/Composants/ItemFriend.js",["178","179"],"import React, {Component} from \"react\";\nimport '../Styles/Articles.css'\nimport profile from '../res/profile.png'\nimport '../Styles/Amis.css'\nimport {read_cookie} from \"sfcookies\";\nimport axios from 'axios'\n\nexport default class ItemFriend extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            image: profile\n        }\n\n    }\n\n\n    onError() {\n        this.setState({\n            image: profile\n        })\n    }\n\n    componentDidMount() {\n        const params = new URLSearchParams();\n        params.append('key', read_cookie(\"key\"));\n        params.append('id', this.props.id);\n\n        axios.get(\"http://localhost:8080/TwisterFinal/Image?\" + params)\n            .then(res => {\n                this.setState({\n                    image: res.data\n                })\n            });\n    }\n\n\n    render() {\n\n\n        return (<div className=\"Amis\"\n                     onClick={() => this.props.getuserprofile(this.props.id, this.props.login, this.props.nom, this.props.prenom)}>\n                <div className=\"photo\">\n                    <a>\n                        <img className=\"profile\" onError={this.onError.bind(this)} src={this.state.image}/>\n                    </a>\n\n                </div>\n                <div className=\"infos\">\n                    <div className=\"name\">\n                        {this.props.prenom} {this.props.nom}\n                    </div>\n\n                </div>\n            </div>\n        );\n\n\n    }\n\n\n}\n","/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/Composants/ItemApprove.js",["180","181","182","183"],"import React, {Component} from \"react\";\nimport '../Styles/Articles.css'\nimport profile from '../res/profile.png'\nimport '../Styles/Amis.css'\nimport {read_cookie} from \"sfcookies\";\nimport axios from 'axios'\n\nexport default class ItemApprove extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            clicked: false,\n            image: profile\n        }\n\n    }\n\n\n    onError() {\n        this.setState({\n            image: profile\n        })\n    }\n\n    componentDidMount() {\n        const params = new URLSearchParams();\n        params.append('key', read_cookie(\"key\"));\n        params.append('id', this.props.id);\n\n        axios.get(\"http://localhost:8080/TwisterFinal/Image?\" + params)\n            .then(res => {\n                this.setState({\n                    image: res.data\n                })\n            });\n    }\n\n\n    disapprove() {\n\n\n        const params1 = new URLSearchParams();\n\n        params1.append('key', read_cookie(\"key\"));\n        params1.append('op', \"dis\");\n        params1.append('id', this.props.id);\n\n\n        axios.post(\"http://localhost:8080/TwisterFinal/Friends?\", params1)\n            .then(() => {\n                this.setState({\n                    clicked: true\n                });\n\n\n            });\n    }\n\n    approve() {\n        const params1 = new URLSearchParams();\n\n        params1.append('key', read_cookie(\"key\"));\n        params1.append('op', \"app\");\n        params1.append('id', this.props.id);\n\n\n        axios.post(\"http://localhost:8080/TwisterFinal/Friends?\", params1)\n            .then(() => {\n                this.setState({\n                    clicked: true\n                });\n\n            });\n    }\n\n    render() {\n\n\n        return (<div className=\"Approuve\">\n                <div\n                    onClick={() => this.props.getuserprofile(this.props.id, this.props.login, this.props.name, this.props.lastname)}\n                    className=\"photo\">\n                    <a>\n                        <img className=\"profile\" onError={this.onError.bind(this)} src={this.state.image}/>\n                    </a>\n\n                </div>\n                <div className=\"infos\">\n                    <div\n                        onClick={() => this.props.getuserprofile(this.props.id, this.props.login, this.props.name, this.props.lastname)}\n                        className=\"name\">\n                        {this.props.name} {this.props.lastname}\n                    </div>\n\n                </div>\n\n                {!this.state.clicked &&\n                <div className=\"approvement\">\n                    <a className=\"approve\" onClick={() => this.approve()}>\n                        Approve\n                    </a>\n                    <a className=\"disapprove\" onClick={() => this.disapprove()}>\n                        Disapprove\n                    </a>\n                </div>\n                }\n            </div>\n        );\n\n\n    }\n\n\n}\n","/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/components/Header.js",["184","185"],"import React, {Component} from \"react\";\nimport logo from '../res/logo.png'\nimport axios from 'axios'\nimport {read_cookie} from \"sfcookies\";\n\nexport default class Header extends Component {\n\n   \n    disconnect() {\n        const params = new URLSearchParams();\n        params.append('key', read_cookie(\"key\"));\n\n        axios.post(\"http://localhost:8080/Project_war/Logout\", params)\n        .then(() => {\n                this.props.logout()\n\n            }\n        );\n    }\n\n    render() {\n      return (\n        <nav class=\"navbar navbar-light bg-light\">\n          <div class=\"container-fluid\">\n            <a class=\"navbar-brand\">Conferentia</a>\n            <div class=\"d-flex\">\n              <div class=\"p-2 d-flex align-items-center\">\n                {this.props.prenomUser} {this.props.nomUser}\n              </div>\n              <button \n                class=\"btn btn-outline-primary\" \n                onClick={() => this.disconnect()}\n                type=\"submit\">\n                Déconnexion\n              </button>\n            </div>\n          </div>\n        </nav>\n      )\n    }\n\n}\n","/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/components/ConferenceList.js",["186","187","188","189"],"import React, {Component} from \"react\";\nimport axios from 'axios';\n\nconst DATA = [\n\t{\n\t\tname: \"Conférence 1\",\n\t\tdate: \"20/01/2020\",\n\t\tdescription: \"Description de la conférence ...\",\n\t\tminPrice: 100,\n\t\tmaxPrice: 250,\n\t\tpending: true,\n\t},\n\t{\n\t\tname: \"Conférence 2\",\n\t\tdate: \"25/01/2020\",\n\t\tdescription: \"Description de la conférence ...\",\n\t\tminPrice: 180,\n\t\tmaxPrice: 450,\n\t}\n]\n\nexport default class Accueil extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\t\tdata: null\n\t\t};\n\n\t\tthis.componentDidMount = this.componentDidMount.bind(this);\n\t}\n\n\n\tcomponentDidMount() {\n\t\t// axios.get(\"http://localhost:8080/TwisterFinal/Messages?\" + params)\n\t\t// .then(res => {\n\t\t//     this.setState(() => {\n\t\t//         return {data: res.data.Array};\n\t\t//     });\n\n\t\t// });\n\t}\n\n\trenderItem(item) {\n\t\treturn (\n\t\t\t<a href=\"#\" class=\"list-group-item list-group-item-action\" aria-current=\"true\">\n\t\t\t\t<div class=\"d-flex w-100 justify-content-between\">\n\t\t\t\t\t<h5 class=\"mb-1\">{item.name}</h5>\n\t\t\t\t\t<small>{item.date}</small>\n\t\t\t\t</div>\n\t\t\t\t<p class=\"mb-1\">{item.description}</p>\n\t\t\t\t<small>${item.minPrice} - ${item.maxPrice}</small>\n\t\t\t</a>\n\t\t)\n\t}\n\n\trenderEmpty() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<p class=\"text-secondary\">Aucune conférence</p>\n\t\t\t</div>\n\t\t)\n\t}\n\n\trender() {\n\t\tlet data = DATA;\n\t\tif (this.props.filter != 'all') {\n\t\t\tdata = data.filter((item) => {\n\t\t\t\treturn item[this.props.filter] !== undefined;\n\t\t\t});\n\t\t}\n\t\treturn (\n\t\t\t<div class=\"list-group mb-3\">\n\t\t\t\t<h3 class=\"mb-2\">{this.props.title}</h3>\n\t\t\t\t{data.map((item) => this.renderItem(item))}\n\t\t\t\t{data.length == 0 && this.renderEmpty()}\n\t\t\t</div>\n\t\t)\n\t}\n}",{"ruleId":"190","replacedBy":"191"},{"ruleId":"192","replacedBy":"193"},{"ruleId":"194","severity":1,"message":"195","line":49,"column":9,"nodeType":"196","messageId":"197","endLine":86,"endColumn":11},{"ruleId":"194","severity":1,"message":"195","line":137,"column":9,"nodeType":"196","messageId":"197","endLine":198,"endColumn":11},{"ruleId":"194","severity":1,"message":"195","line":97,"column":9,"nodeType":"196","messageId":"197","endLine":141,"endColumn":11},{"ruleId":"198","severity":1,"message":"199","line":101,"column":25,"nodeType":"200","endLine":101,"endColumn":28},{"ruleId":"198","severity":1,"message":"199","line":125,"column":29,"nodeType":"200","endLine":125,"endColumn":68},{"ruleId":"198","severity":1,"message":"199","line":128,"column":33,"nodeType":"200","endLine":128,"endColumn":111},{"ruleId":"201","severity":1,"message":"202","line":5,"column":5,"nodeType":"203","messageId":"204","endLine":8,"endColumn":6},{"ruleId":"198","severity":1,"message":"199","line":16,"column":25,"nodeType":"200","endLine":16,"endColumn":64},{"ruleId":"198","severity":1,"message":"199","line":79,"column":21,"nodeType":"200","endLine":79,"endColumn":24},{"ruleId":"198","severity":1,"message":"199","line":135,"column":29,"nodeType":"200","endLine":135,"endColumn":68},{"ruleId":"205","severity":1,"message":"206","line":2,"column":8,"nodeType":"207","messageId":"208","endLine":2,"endColumn":14},{"ruleId":"198","severity":1,"message":"199","line":61,"column":17,"nodeType":"200","endLine":61,"endColumn":60},{"ruleId":"198","severity":1,"message":"199","line":66,"column":17,"nodeType":"200","endLine":67,"endColumn":60},{"ruleId":"198","severity":1,"message":"199","line":68,"column":17,"nodeType":"200","endLine":68,"endColumn":54},{"ruleId":"190","replacedBy":"209"},{"ruleId":"192","replacedBy":"210"},{"ruleId":"198","severity":1,"message":"199","line":75,"column":21,"nodeType":"200","endLine":75,"endColumn":24},{"ruleId":"211","severity":1,"message":"212","line":88,"column":65,"nodeType":"200","endLine":88,"endColumn":88},{"ruleId":"213","severity":1,"message":"214","line":50,"column":12,"nodeType":"215","messageId":"216","endLine":50,"endColumn":38},{"ruleId":"217","severity":1,"message":"218","line":193,"column":35,"nodeType":"219","messageId":"220","endLine":193,"endColumn":37},{"ruleId":"198","severity":1,"message":"199","line":214,"column":21,"nodeType":"200","endLine":214,"endColumn":79},{"ruleId":"198","severity":1,"message":"199","line":217,"column":21,"nodeType":"200","endLine":218,"endColumn":138},{"ruleId":"211","severity":1,"message":"212","line":219,"column":25,"nodeType":"200","endLine":219,"endColumn":108},{"ruleId":"198","severity":1,"message":"199","line":222,"column":21,"nodeType":"200","endLine":223,"endColumn":137},{"ruleId":"198","severity":1,"message":"199","line":247,"column":21,"nodeType":"200","endLine":248,"endColumn":44},{"ruleId":"198","severity":1,"message":"199","line":249,"column":21,"nodeType":"200","endLine":251,"endColumn":45},{"ruleId":"198","severity":1,"message":"199","line":253,"column":21,"nodeType":"200","endLine":254,"endColumn":96},{"ruleId":"198","severity":1,"message":"199","line":264,"column":33,"nodeType":"200","endLine":265,"endColumn":100},{"ruleId":"198","severity":1,"message":"199","line":275,"column":45,"nodeType":"200","endLine":278,"endColumn":46},{"ruleId":"198","severity":1,"message":"199","line":121,"column":25,"nodeType":"200","endLine":121,"endColumn":63},{"ruleId":"198","severity":1,"message":"199","line":126,"column":25,"nodeType":"200","endLine":126,"endColumn":28},{"ruleId":"198","severity":1,"message":"199","line":132,"column":21,"nodeType":"200","endLine":132,"endColumn":60},{"ruleId":"201","severity":1,"message":"202","line":8,"column":5,"nodeType":"203","messageId":"204","endLine":12,"endColumn":6},{"ruleId":"201","severity":1,"message":"202","line":8,"column":5,"nodeType":"203","messageId":"204","endLine":10,"endColumn":6},{"ruleId":"217","severity":1,"message":"218","line":74,"column":35,"nodeType":"219","messageId":"220","endLine":74,"endColumn":37},{"ruleId":"198","severity":1,"message":"199","line":159,"column":17,"nodeType":"200","endLine":159,"endColumn":75},{"ruleId":"198","severity":1,"message":"199","line":163,"column":17,"nodeType":"200","endLine":164,"endColumn":134},{"ruleId":"211","severity":1,"message":"212","line":165,"column":21,"nodeType":"200","endLine":165,"endColumn":84},{"ruleId":"198","severity":1,"message":"199","line":168,"column":17,"nodeType":"200","endLine":169,"endColumn":133},{"ruleId":"198","severity":1,"message":"199","line":175,"column":21,"nodeType":"200","endLine":175,"endColumn":41},{"ruleId":"198","severity":1,"message":"199","line":185,"column":17,"nodeType":"200","endLine":186,"endColumn":40},{"ruleId":"198","severity":1,"message":"199","line":187,"column":17,"nodeType":"200","endLine":189,"endColumn":41},{"ruleId":"198","severity":1,"message":"199","line":191,"column":17,"nodeType":"200","endLine":192,"endColumn":92},{"ruleId":"198","severity":1,"message":"199","line":200,"column":29,"nodeType":"200","endLine":201,"endColumn":96},{"ruleId":"198","severity":1,"message":"199","line":209,"column":72,"nodeType":"200","endLine":209,"endColumn":75},{"ruleId":"198","severity":1,"message":"199","line":45,"column":21,"nodeType":"200","endLine":45,"endColumn":24},{"ruleId":"211","severity":1,"message":"212","line":46,"column":25,"nodeType":"200","endLine":46,"endColumn":108},{"ruleId":"198","severity":1,"message":"199","line":84,"column":21,"nodeType":"200","endLine":84,"endColumn":24},{"ruleId":"211","severity":1,"message":"212","line":85,"column":25,"nodeType":"200","endLine":85,"endColumn":108},{"ruleId":"198","severity":1,"message":"199","line":100,"column":21,"nodeType":"200","endLine":100,"endColumn":75},{"ruleId":"198","severity":1,"message":"199","line":103,"column":21,"nodeType":"200","endLine":103,"endColumn":81},{"ruleId":"205","severity":1,"message":"221","line":2,"column":8,"nodeType":"207","messageId":"208","endLine":2,"endColumn":12},{"ruleId":"198","severity":1,"message":"199","line":25,"column":13,"nodeType":"200","endLine":25,"endColumn":37},{"ruleId":"205","severity":1,"message":"222","line":2,"column":8,"nodeType":"207","messageId":"208","endLine":2,"endColumn":13},{"ruleId":"198","severity":1,"message":"223","line":46,"column":4,"nodeType":"200","endLine":46,"endColumn":83},{"ruleId":"224","severity":1,"message":"225","line":67,"column":25,"nodeType":"226","messageId":"227","endLine":67,"endColumn":27},{"ruleId":"224","severity":1,"message":"228","line":76,"column":18,"nodeType":"226","messageId":"227","endLine":76,"endColumn":20},"no-native-reassign",["229"],"no-negated-in-lhs",["230"],"no-unreachable","Unreachable code.","ReturnStatement","unreachableCode","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-unused-vars","'Search' is defined but never used.","Identifier","unusedVar",["229"],["230"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-cond-assign","Expected a conditional expression and instead saw an assignment.","AssignmentExpression","missing","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'logo' is defined but never used.","'axios' is defined but never used.","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","no-global-assign","no-unsafe-negation"]