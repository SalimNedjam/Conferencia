[{"/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/index.js":"1","/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/serviceWorker.js":"2","/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/MainPage.js":"3","/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/Navigation.js":"4","/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/Accueil.js":"5","/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/Authentification.js":"6","/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/Forgot.js":"7","/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/MyProfile.js":"8","/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/Success.js":"9","/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/ShowProfile.js":"10","/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/Register.js":"11","/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/ChangePassword.js":"12","/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/SearchPage.js":"13","/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/Composants/Header.js":"14","/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/Composants/PostMessage.js":"15","/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/Composants/Messages.js":"16","/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/Composants/ListFriend.js":"17","/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/Composants/ProfileHeader.js":"18","/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/Composants/Stat.js":"19","/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/Composants/ListSearch.js":"20","/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/Composants/Search.js":"21","/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/Composants/PostRespond.js":"22","/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/Composants/ListApprove.js":"23","/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/Composants/Comments.js":"24","/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/Composants/ItemFriend.js":"25","/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/Composants/ItemApprove.js":"26","/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/components/Header.js":"27","/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/components/ConferenceList.js":"28","/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/App.js":"29","/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/pages/Home.js":"30","/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/pages/Signup.js":"31","/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/pages/Profile.js":"32","/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/pages/Login.js":"33","/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/pages/Logout.js":"34","/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/redux/store.js":"35","/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/redux/reducers/index.js":"36","/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/redux/reducers/user.js":"37","/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/redux/actionTypes.js":"38","/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/redux/actions.js":"39","/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/pages/NewConference.js":"40","/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/pages/Conference.js":"41","/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/components/Loading.js":"42"},{"size":699,"mtime":1611001572108,"results":"43","hashOfConfig":"44"},{"size":5737,"mtime":1610525251849,"results":"45","hashOfConfig":"44"},{"size":6489,"mtime":1610807665998,"results":"46","hashOfConfig":"44"},{"size":7163,"mtime":1610807945626,"results":"47","hashOfConfig":"44"},{"size":1396,"mtime":1610808433279,"results":"48","hashOfConfig":"44"},{"size":7914,"mtime":1610561315046,"results":"49","hashOfConfig":"44"},{"size":4763,"mtime":1610576784081,"results":"50","hashOfConfig":"44"},{"size":3466,"mtime":1610525251849,"results":"51","hashOfConfig":"44"},{"size":590,"mtime":1610525251849,"results":"52","hashOfConfig":"44"},{"size":4863,"mtime":1610525251849,"results":"53","hashOfConfig":"44"},{"size":7298,"mtime":1610807326039,"results":"54","hashOfConfig":"44"},{"size":6293,"mtime":1610561732638,"results":"55","hashOfConfig":"44"},{"size":2509,"mtime":1610525251849,"results":"56","hashOfConfig":"44"},{"size":1689,"mtime":1610525251849,"results":"57","hashOfConfig":"44"},{"size":2786,"mtime":1610525251849,"results":"58","hashOfConfig":"44"},{"size":10998,"mtime":1610525251849,"results":"59","hashOfConfig":"44"},{"size":2866,"mtime":1610525251849,"results":"60","hashOfConfig":"44"},{"size":1524,"mtime":1610525251849,"results":"61","hashOfConfig":"44"},{"size":4443,"mtime":1610525251849,"results":"62","hashOfConfig":"44"},{"size":1293,"mtime":1610525251849,"results":"63","hashOfConfig":"44"},{"size":1574,"mtime":1610525251849,"results":"64","hashOfConfig":"44"},{"size":1664,"mtime":1610525251849,"results":"65","hashOfConfig":"44"},{"size":1599,"mtime":1610525251849,"results":"66","hashOfConfig":"44"},{"size":8645,"mtime":1610525251849,"results":"67","hashOfConfig":"44"},{"size":1483,"mtime":1610525251849,"results":"68","hashOfConfig":"44"},{"size":2929,"mtime":1610525251849,"results":"69","hashOfConfig":"44"},{"size":1277,"mtime":1611072317808,"results":"70","hashOfConfig":"44"},{"size":2127,"mtime":1611088621327,"results":"71","hashOfConfig":"44"},{"size":2944,"mtime":1611088929467,"results":"72","hashOfConfig":"44"},{"size":1325,"mtime":1611073457381,"results":"73","hashOfConfig":"44"},{"size":7479,"mtime":1611050925243,"results":"74","hashOfConfig":"44"},{"size":6270,"mtime":1610899181734,"results":"75","hashOfConfig":"44"},{"size":3390,"mtime":1610824485305,"results":"76","hashOfConfig":"44"},{"size":587,"mtime":1610813191949,"results":"77","hashOfConfig":"44"},{"size":424,"mtime":1610815935151,"results":"78","hashOfConfig":"44"},{"size":111,"mtime":1610811383808,"results":"79","hashOfConfig":"44"},{"size":448,"mtime":1610816407705,"results":"80","hashOfConfig":"44"},{"size":75,"mtime":1610812377514,"results":"81","hashOfConfig":"44"},{"size":219,"mtime":1610812407306,"results":"82","hashOfConfig":"44"},{"size":12796,"mtime":1611090602484,"results":"83","hashOfConfig":"44"},{"size":1392,"mtime":1611003896626,"results":"84","hashOfConfig":"44"},{"size":267,"mtime":1611003799651,"results":"85","hashOfConfig":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"jx1lc8",{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"93"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"93"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"93"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"93"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"93"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"93"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"123"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"93"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"93"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"93"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"123"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"93"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"93"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"93"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"93"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"93"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"88"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"88"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"168","usedDeprecatedRules":"88"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"88"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"174","usedDeprecatedRules":"88"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"88"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},"/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/index.js",[],["194","195"],"/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/serviceWorker.js",[],"/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/MainPage.js",[],["196","197"],"/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/Navigation.js",[],"/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/Accueil.js",["198","199","200"],"import React, {Component} from \"react\";\nimport Messages from \"./Composants/Messages\";\nimport PostMessage from \"./Composants/PostMessage\";\nimport ConferenceList from \"./components/ConferenceList\";\nimport axios from 'axios';\nimport {read_cookie} from \"sfcookies\";\n\nexport default class Accueil extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: null\n        };\n\n        this.componentDidMount = this.componentDidMount.bind(this);\n    }\n\n\n    componentDidMount() {\n        const params = new URLSearchParams();\n        params.append('key', read_cookie(\"key\"));\n        params.append('op', \"friends\");\n\n        axios.get(\"http://localhost:8080/TwisterFinal/Conferences?\" + params)\n        .then(res => {\n            this.setState(() => {\n                return {data: res.data.Array};\n            });\n\n        });\n    }\n\n    render() {\n        const {data} = this.state;\n\n        return (\n            <div class=\"container-sm mt-5 d-flex\">\n                <div class=\"flex-fill m-2\">\n                    <ConferenceList title=\"En attente\" filter='pending'/>\n                    <ConferenceList title=\"Validée\" filter='validate'/>\n                </div>\n                <div class=\"flex-fill m-2\">\n                    <ConferenceList title=\"Toutes les conférences\" filter='all'/>\n                </div>\n            </div>\n        )\n    }\n\n}\n","/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/Authentification.js",["201"],"/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, {Component} from \"react\";\nimport axios from 'axios';\nimport logo from './res/logo.png';\n\n\nexport default class Authentification extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            error: \"\",\n            checkbox: false\n        }\n\n    }\n\n    checkValidity() {\n\n        const params = new URLSearchParams();\n        params.append('user', this.inputLogin.value);\n        params.append('password', this.inputPassword.value);\n        params.append('root', this.state.checkbox ? \"true\" : \"false\");\n\n        axios.post(\"http://localhost:8080/Project_war/Login\", params)\n            .then(res => {\n                if (res.data.key !== undefined) {\n                    this.props.login(res.data.key);\n                }\n                else {\n                    if (res.data.code !== -1)\n                        this.setState({\n                            error: res.data.message\n                        });\n                    else\n                        this.setState({\n                            error: \"Veuillez remplir les champs\"\n                        })\n                }\n            })\n\n\n    }\n\n    render() {\n        return (\n            <div class=\"mt-5 container p-4 box box-auth\">\n                <form>\n                    <h1 class=\"mb-4\">Conferentia</h1>\n                    {this.state.error && \n                        <div class=\"alert alert-danger p-2\" role=\"alert\">\n                        {this.state.error}\n                        </div>\n                    }\n                    <div class=\"mb-4\">\n                        <label \n                            for=\"emailInput\" \n                            class=\"form-label\">\n                            Adresse mail\n                        </label>\n                        <input \n                            type=\"email\"\n                            name=\"login\"\n                            class=\"form-control\"\n                            id=\"emailInput\"\n                            ref={(inputLogin) => {\n                                this.inputLogin = inputLogin\n                            }}\n                            onKeyPress={\n                                event => {\n                                    if (event.key === \"Enter\")\n                                        this.checkValidity();\n                                }\n                            }\n                            aria-describedby=\"emailHelp\"/>\n                    </div>\n                    <div class=\"mb-3\">\n                        <label\n                            for=\"passwordInput\" \n                            class=\"form-label\">\n                            Mot de passe\n                        </label>\n                        <input \n                            type=\"password\"\n                            name=\"pwd\"\n                            class=\"form-control\"\n                            ref={(inputPassword) => {\n                                this.inputPassword = inputPassword\n                            }}\n                            onKeyPress={\n                                event => {\n                                    if (event.key === \"Enter\")\n                                        this.checkValidity();\n                                }\n                            }\n                            id=\"passwordInput\"/>\n                            <a onClick={() => this.props.forgot()}>\n                            Mot de passe oublié ?\n                        </a>\n                    </div>\n                    <div class=\"mb-3 form-check\">\n                        <input \n                            type=\"checkbox\" \n                            defaultChecked={this.state.checkbox}\n                            class=\"form-check-input\"\n                            onChange={() => this.setState({\n                                checkbox: !this.state.checkbox\n                            })}\n                            id=\"checkInput\"/>\n                        <label \n                            class=\"form-check-label\" \n                            for=\"checkInput\">\n                            Garder ma session active\n                        </label>\n                    </div>\n                    <div class=\"d-flex justify-content-center\">\n                        <button\n                            type=\"button\"\n                            name=\"connexion\"\n                            onClick={() => this.checkValidity()}\n                            class=\"btn btn-primary m-1\">\n                            Connexion\n                        </button>\n                        <button \n                            type=\"button\"\n                            name=\"signup\"\n                            onClick={() => this.props.signup()}\n                            class=\"btn btn-light m-1\">\n                            Inscription\n                        </button>\n                    </div>\n                </form>\n            </div>\n        );\n\n        return (\n            <div>\n\n                <div className=\"input_container\" id=\"connexion_main\">\n                    <div className=\"logos\">\n                        <a>\n                            <img src={logo} alt=\"\"/>\n                        </a>\n                    </div>\n                    <div>\n                        <span className=\"errors\">{this.state.error}</span>\n\n                        <input\n                            onKeyPress={\n                                event => {\n                                    if (event.key === \"Enter\")\n                                        this.checkValidity();\n                                }\n                            }\n                            ref={(inputLogin) => {\n                                this.inputLogin = inputLogin\n                            }}\n                            type=\"email\" name=\"login\" placeholder=\"Mail\"/>\n                        <input\n                            onKeyPress={\n                                event => {\n                                    if (event.key === \"Enter\")\n                                        this.checkValidity();\n                                }\n                            }\n                            ref={(inputPassword) => {\n                                this.inputPassword = inputPassword\n                            }}\n                            type=\"password\" name=\"pwd\" placeholder=\"Mot de passe\"/>\n                    </div>\n                    <div>\n                        <div className=\"Login\">\n                            <input type=\"submit\" name=\"connexion\" value=\"Suivant\" className=\"myButton\"\n                                   onClick={() => this.checkValidity()}/>\n                        </div>\n                        <div className=\"submits\">\n                            <div className=\"links\">\n                                <div id=\"link1\" className=\"link\">\n                                    <a onClick={() => this.props.signup()}>Pas encore inscrit\n                                        ?</a>\n                                </div>\n                                <div id=\"link2\" className=\"link\">\n                                    <a onClick={() => this.props.forgot()}>Mot de passe\n                                        perdu</a>\n                                </div>\n\n                            </div>\n                            <div>\n                                <input type=\"checkbox\" defaultChecked={this.state.checkbox}\n                                       onChange={() => this.setState({checkbox: !this.state.checkbox})}/>\n                                <span className=\"labels\">Garder ma session active</span>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n\n}\n","/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/Forgot.js",["202","203","204","205"],"import React, {Component} from \"react\";\nimport axios from 'axios'\nimport logo from './res/logo.png'\n\nexport default class Forgot extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            errors: {},\n\n        }\n    }\n\n    sendRequest() {\n        if (this.checkForm()) {\n            const formData = new URLSearchParams();\n            formData.append('email', this.inputEmail.value);\n\n            axios.get(\"http://localhost:8080/TwisterFinal/Reset?\" + formData);\n            this.props.forgotSuccess()\n        }\n\n    }\n\n    checkForm() {\n        let errors = {};\n        let formIsValid = true;\n\n        if (this.inputEmail.value === \"\") {\n            formIsValid = false;\n            errors[\"email\"] = \"Le champs ne peut être vide\";\n        }\n\n        this.setState({errors});\n        return formIsValid;\n    };\n\n    render() {\n        return (\n            <div class=\"container box box-auth mt-5 p-4 mb-5\">\n                <h2 class=\"mb-3\">Mot de passe oublié</h2>\n                \n                {this.state.errors[\"email\"] && \n                    <div class=\"alert alert-danger p-2\" role=\"alert\">\n                        {this.state.errors[\"email\"]}\n                    </div>\n                }\n\n                <div class=\"mb-3\">\n                    <label \n                        class=\"form-check-label\" \n                        for=\"emailInput\">\n                        Adresse e-mail\n                    </label>\n                    <input \n                        type=\"email\" \n                        class=\"form-control\"\n                        ref={(inputEmail) => {\n                            this.inputEmail = inputEmail\n                        }}\n                        onKeyPress={\n                            event => {\n                                if (event.key === \"Enter\")\n                                    this.sendRequest();\n                            }\n                        }\n                        id=\"emailInput\"/>\n                </div>\n\n                <div class=\"d-flex justify-content-center\">\n                    <button \n                        type=\"button\"\n                        name=\"singup\"\n                        onClick={() => this.props.signin()}\n                        class=\"btn btn-light m-1\">\n                        Annuler\n                    </button>\n                    <button \n                        type=\"button\"\n                        name=\"change\"\n                        onClick={() => this.props.changePassword()}\n                        class=\"btn btn-light m-1\">\n                        Changer de mot de passe\n                    </button>\n                    <button\n                        type=\"button\"\n                        name=\"connexion\"\n                        onClick={() => this.sendRequest()}\n                        class=\"btn btn-primary m-1\">\n                        Suivant\n                    </button>\n                </div>\n            </div>\n        );\n\n        return (\n            <div className=\"Forgot\">\n                <div className=\"input_container\">\n                    <div className=\"logos\">\n                        <a>\n                            <img src={logo} onClick={() => this.props.signin()} alt=\"\"/>\n                        </a>\n                    </div>\n                    <div>\n                        <span className=\"errors\">{this.state.errors[\"email\"]}</span>\n\n                        <input\n                            onKeyPress={\n                                event => {\n                                    if (event.key === \"Enter\")\n                                        this.sendRequest();\n                                }\n                            }\n                            ref={(inputEmail) => {\n                                this.inputEmail = inputEmail\n                            }}\n                            type=\"text\" name=\"login\" placeholder=\"Adresse e-mail\"/>\n\n                    </div>\n                    <div>\n                        <input type=\"submit\" name=\"connexion\" value=\"Suivant\" className=\"myButton\"\n                               onClick={() => this.sendRequest()}/>\n                        <div className=\"links\">\n                            <a onClick={() => this.props.signin()}>Revenir à\n                                l'authentification</a>\n                            <div id=\"link3\" className=\"link\">\n                                <a className=\"ChangePasswordLink\" onClick={() => this.props.changePassword()}>Changer de\n                                    mot de passe</a>\n                            </div>\n\n                        </div>\n\n                    </div>\n                </div>\n\n\n            </div>\n\n\n        );\n\n    }\n\n\n}\n","/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/MyProfile.js",[],"/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/Success.js",["206","207"],"import React, {Component} from \"react\";\n\nexport default class Success extends Component {\n\n    constructor(props) {\n        super(props);\n\n    }\n\n    render() {\n        return (\n            <div className=\"SuccessForgot\">\n                <div className=\"input_container\">\n                    <div>{this.props.message}</div>\n                    <div className=\"links\">\n                        <a onClick={() => this.props.signin()}>Revenir à\n                            l'authentification</a>\n\n                    </div>\n\n                </div>\n\n\n            </div>\n\n\n        );\n\n    }\n\n\n}\n","/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/ShowProfile.js",[],"/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/Register.js",["208"],"import React, {Component} from \"react\";\nimport axios from 'axios';\n\nconst FORM = {\n    mail: {\n        mandatory: true,\n        name: 'email',\n        type: 'email',\n        label: \"Adresse mail\",\n    },\n    password: {\n        mandatory: true,\n        name: 'pass',\n        type: 'password',\n        label: \"Mot de passe\",\n        minLength: 6,\n    },\n    confirmPassword: {\n        verify: 'password',\n        mandatory: true,\n        name: 'confirmPass',\n        type: 'password',\n        label: \"Confirmation du mot de passe\",\n        minLength: 6,\n    },\n    title: {\n        mandatory: true,\n        name: 'title',\n        type: 'select',\n        values: ['Prof', 'Dr','Mr', 'Mrs', 'Ms'],\n        label: \"Titre\",\n    },\n    prenom: {\n        mandatory: true,\n        name: 'firstname',\n        type: 'text',\n        label: \"Prénom\",\n    },\n    nom: {\n        mandatory: true,\n        name: 'lastname',\n        type: 'text',\n        label: \"Nom\",\n    },\n    institution: {\n        mandatory: true,\n        name: 'institution',\n        type: 'text',\n        label: \"Institution\",\n    },\n    address: {\n        mandatory: true,\n        name: 'address',\n        type: 'text',\n        label: \"Adresse\",\n    },\n    zip: {\n        mandatory: true,\n        name: 'zip',\n        type: 'text',\n        label: \"Code postal\",\n    },\n    city: {\n        mandatory: true,\n        name: 'city',\n        type: 'text',\n        label: \"Ville\",\n    },\n    country: {\n        mandatory: true,\n        name: 'country',\n        type: 'text',\n        label: \"Pays\",\n    },\n    phone: {\n        mandatory: true,\n        name: 'institution',\n        type: 'text',\n        label: \"Téléphone\",\n    },\n}\n\nexport default class Register extends Component {\n\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            errors: {},\n            text: true\n        };\n\n        this.inputs = [];\n    }\n\n    createUser() {\n        if (this.checkForm()) {\n            const params = new URLSearchParams();\n        \n            for (let index in Object.keys(FORM)) {\n                index = Object.keys(FORM)[index];\n                if (!FORM[index].verify) {\n                    params.append(index, this.inputs[index].value);\n                    console.log(this.inputs[index].value);\n                }\n            }\n\n            axios.post(\"http://localhost:8080/Project_war/CreateUser\", params)\n            .then(res => {\n                if (res.data.code === undefined) {\n                    this.props.signin();\n                } else {\n                    let errors = {};\n                    errors[\"serverError\"] = res.data.message;\n                    this.setState({errors})\n                }\n            });\n        }\n    }\n\n    checkForm() {\n        let errors = {};\n        let formIsValid = true;\n\n        for (let index in Object.keys(FORM)) {\n            index = Object.keys(FORM)[index];\n            let item = FORM[index];\n            if (item.mandatory && this.inputs[index].value === \"\") {\n                errors[index] = \"Le champ ne peut être vide\";\n                formIsValid = false;\n            } else if (item.regex && !this.inputs[index].value.match(item.regex)) {\n                this.inputs[index].value = \"\";\n                formIsValid = false;\n                errors[index] = \"Uniquement des caractères\";\n            } else if (item.minLength && this.inputs[index].value.length < item.minLength) {\n                this.inputs[index].value = \"\";\n                formIsValid = false;\n                errors[index] = `Minimum ${item.minLength} caractères`;\n            } else if (item.verify && this.inputs[index].value !== this.inputs[item.verify].value) {\n                this.inputs[item.verify].value = \"\";\n                this.inputs[index].value = \"\";\n                formIsValid = false;\n                errors[item.verify] = \"Mot de passe non identique\";\n            }\n        }\n\n        this.setState({errors});\n        return formIsValid;\n    }\n\n    renderItem(index, item) {\n        let jsx;\n        if (item.type == 'select' && item.values) {\n            jsx = (\n                <select \n                    class=\"form-select\"\n                    ref={() => {\n                        this.inputs[index] = {value: item.values[0]};\n                    }}\n                    onChange={(e) => {\n                        this.inputs[index] = {value: e.target.value};\n                    }}>\n                    {item.values.map((value) => <option value={value}>{value}</option>)}\n                </select>\n          );\n        } else {\n            jsx = (\n            <input \n                type={item.type}\n                name={item.name}\n                class=\"form-control\"\n                id={item.label + \"-input\"}\n                ref={(input) => {\n                    this.inputs[index] = input;\n                }}\n                onKeyPress={\n                    event => {\n                        if (event.key === \"Enter\")\n                            this.createUser();\n                    }\n                }/>\n            );\n        }\n\n        return (\n            <div class=\"mb-4\">\n                <label \n                    for={item.label + \"-input\"}\n                    class=\"form-label\">\n                    {item.mandatory &&\n                        <span class=\"text-danger\">* </span>\n                    }\n                    {item.label}\n\n                </label>\n                {this.state.errors[index] && \n                    <div class=\"alert alert-danger p-2\" role=\"alert\">\n                        {this.state.errors[index]}\n                    </div>\n                }\n                {jsx}\n            </div>\n        )\n    }\n\n    render() {\n        return (\n            <div class=\"container box box-auth mt-5 p-4 mb-5\">\n                <h1 class=\"mb-3\">Inscription</h1>\n                <p class=\"mb-4\">\n                    Les champs obligatoires sont marqués par\n                    <span class=\"text-danger\"> * </span>.\n                </p>\n\n                {this.state.errors[\"serverError\"] && \n                    <div class=\"alert alert-danger p-2\" role=\"alert\">\n                        {this.state.errors[\"serverError\"]}\n                    </div>\n                }\n\n                {this.state.errors[\"email\"] && \n                    <div class=\"alert alert-danger p-2\" role=\"alert\">\n                        {this.state.errors[\"email\"]}\n                    </div>\n                }\n\n                <form>\n                    {Object.keys(FORM).map((item) => this.renderItem(item, FORM[item]))}\n                </form>\n                <div class=\"d-flex justify-content-center\">\n                    <button\n                        type=\"button\"\n                        name=\"connexion\"\n                        onClick={() => this.createUser()}\n                        class=\"btn btn-primary m-1\">\n                        Inscription\n                    </button>\n                    <button \n                        type=\"button\"\n                        name=\"connexion\"\n                        onClick={() => this.props.signin()}\n                        class=\"btn btn-light m-1\">\n                        J'ai déjà un compte\n                    </button>\n                </div>\n            </div>\n        )\n    }\n\n}\n","/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/ChangePassword.js",["209","210"],"import React, {Component} from \"react\";\nimport axios from 'axios'\nimport logo from './res/logo.png'\n\nconst FORM = {\n    lgin: {\n        mandatory: true,\n        name: 'email',\n        type: 'email',\n        label: \"Adresse mail\",\n    },\n    password: {\n        mandatory: true,\n        name: 'pass',\n        type: 'password',\n        label: \"Mot de passe\",\n        minLength: 6,\n    },\n    newPassword: {\n        mandatory: true,\n        name: 'pass',\n        type: 'password',\n        label: \"Mot de passe\",\n        minLength: 6,\n    },\n}\n\n\nexport default class ChangePassword extends Component {\n\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            errors: {},\n            text: true\n        }\n\n        this.inputs = [];\n    }\n\n    sendRequest() {\n        if (this.handleValidation()) {\n            const params = new URLSearchParams();\n\n            for (let index in Object.keys(FORM)) {\n                index = Object.keys(FORM)[index];\n                params.append(index, this.inputs[index].value);\n            }\n\n            params.append('login', this.inputLogin.value);\n            params.append('password', this.inputPassword.value);\n            params.append('newPassword', this.inputNewPassword.value);\n\n            axios.post(\"http://localhost:8080/TwisterFinal/Reset\", params)\n                .then(res => {\n                    if (res.data.code === undefined)\n                        this.props.resetSuccess();\n                    else {\n                        let errors = {};\n                        errors[\"serverError\"] = res.data.message;\n                        this.setState({\n                            errors: errors\n                        })\n                    }\n\n                });\n        }\n    }\n\n    checkForm() {\n        let errors = {};\n        let formIsValid = true;\n\n        for (let index in Object.keys(FORM)) {\n            index = Object.keys(FORM)[index];\n            let item = FORM[index];\n            if (item.mandatory && this.inputs[index].value === \"\") {\n                errors[index] = \"Le champ ne peut être vide\";\n                formIsValid = false;\n            } else if (item.regex && !this.inputs[index].value.match(item.regex)) {\n                this.inputs[index].value = \"\";\n                formIsValid = false;\n                errors[index] = \"Uniquement des caractères\";\n            } else if (item.minLength && this.inputs[index].value.length < item.minLength) {\n                this.inputs[index].value = \"\";\n                formIsValid = false;\n                errors[index] = `Minimum ${item.minLength} caractères`;\n            }\n        }\n\n        this.setState({errors});\n        return formIsValid;\n    }\n\n\n    handleValidation() {\n        let errors = {};\n        let formIsValid = true;\n\n        //login\n        if (this.inputLogin.value === \"\") {\n            formIsValid = false;\n            errors[\"login\"] = \"Login: Cannot be empty\";\n        }\n\n        //password\n        if (this.inputPassword.value === \"\") {\n            formIsValid = false;\n            errors[\"password\"] = \"Password: Cannot be empty\";\n        }\n\n        //password\n        if (this.inputNewPassword.value === \"\") {\n            formIsValid = false;\n            errors[\"newPassword\"] = \"Password: Cannot be empty\";\n        }\n        else if (this.inputNewPassword.value.length < 6) {\n            this.inputNewPassword.value = \"\";\n            formIsValid = false;\n            errors[\"newPassword\"] = \"Password: Too short, the minimum is 6 letters\";\n        }\n\n\n        this.setState({errors: errors});\n        return formIsValid;\n    };\n\n\n    render() {\n\n        return (\n            <div className=\"input_container\">\n                <div className=\"logos\">\n                    <a>\n                        <img src={logo} onClick={() => this.props.signin()} alt=\"\"/>\n                    </a>\n                </div>\n                <div className=\"register\">\n                    <span className=\"errors\">{this.state.errors[\"serverError\"]}</span>\n\n                    <span className=\"errors\">{this.state.errors[\"login\"]}</span>\n\n                    <input\n                        onKeyPress={\n                            event => {\n                                if (event.key === \"Enter\")\n                                    this.sendRequest();\n                            }\n                        }\n                        ref={(inputLogin) => {\n                            this.inputLogin = inputLogin\n                        }}\n                        type=\"text\" name=\"login\" placeholder=\"Login ou adresse e-mail\"/>\n\n                    <span className=\"errors\">{this.state.errors[\"password\"]}</span>\n\n                    <input\n                        onKeyPress={\n                            event => {\n                                if (event.key === \"Enter\")\n                                    this.sendRequest();\n                            }\n                        }\n                        ref={(inputPassword) => {\n                            this.inputPassword = inputPassword\n                        }}\n                        type=\"password\" name=\"pass\" placeholder=\"Ancien mot de passe\"/>\n\n\n                    <span className=\"errors\">{this.state.errors[\"newPassword\"]}</span>\n\n                    <input\n                        onKeyPress={\n                            event => {\n                                if (event.key === \"Enter\")\n                                    this.sendRequest();\n                            }\n                        }\n                        ref={(inputNewPassword) => {\n                            this.inputNewPassword = inputNewPassword\n                        }}\n                        type=\"password\" name=\"pass\" placeholder=\"Nouveau mot de passe\"/>\n\n\n                    <div>\n                        <input type=\"submit\" name=\"inscription\" value=\"Suivant\" className=\"myButton\"\n                               onClick={() => this.sendRequest()}/>\n\n                        <div className=\"links\">\n                            <a onClick={() => this.props.signin()}>Revenir à\n                                l'authentification ? </a>\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        );\n    }\n\n\n}\n","/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/SearchPage.js",[],"/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/Composants/Header.js",["211","212","213","214"],"import React, {Component} from \"react\";\nimport Search from \"./Search\";\nimport logo from '../res/logo.png'\nimport '../Styles/Head.css'\nimport axios from 'axios'\nimport {read_cookie} from \"sfcookies\";\nimport logo2 from '../res/logo2.png'\nimport logo3 from '../res/logo3.png'\n\nexport default class Header extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            file: logo,\n        };\n\n    }\n\n    componentDidMount() {\n        window.addEventListener(\"resize\", this.resize.bind(this));\n        this.resize();\n    }\n\n    resize() {\n        if (window.innerWidth > 700) {\n            this.setState({file: logo});\n\n        }\n        else if (window.innerWidth > 600) {\n            this.setState({file: logo2});\n\n        }\n        else {\n            this.setState({file: logo3});\n\n        }\n\n    }\n\n    disconnect() {\n\n        const params = new URLSearchParams();\n        params.append('key', read_cookie(\"key\"));\n\n        axios.post(\"http://localhost:8080/Project_war/Logout\", params)\n            .then(() => {\n                    this.props.logout()\n\n                }\n            );\n\n\n    }\n\n    render() {\n\n\n        return (<div className=\"Head\">\n            <div className=\"logo\">\n                <a onClick={() => this.props.getaccueil()}>\n                    <img src={this.state.file} alt=\"\"/>\n                </a>\n            </div>\n            <div className=\"liens\">\n                <a className=\"separatedLink\"\n                   onClick={() => this.props.getprofile()}>{this.props.prenomUser} {this.props.nomUser}</a>\n                <a onClick={() => this.disconnect()}>Déconnexion</a>\n            </div>\n        </div>);\n\n\n    }\n\n\n}\n",["215","216"],"/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/Composants/PostMessage.js",["217","218"],"import React, {Component} from \"react\";\nimport \"../Styles/PostMessage.css\"\nimport axios from 'axios'\nimport {read_cookie} from \"sfcookies\";\nimport addpicture from \"../res/picture.jpg\"\n\nexport default class PostMessage extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            publication: null,\n            file: null\n        }\n    }\n\n    postTwist() {\n\n        if (this.inputContent.textContent !== \"\") {\n\n\n            const formData = new URLSearchParams();\n            formData.append('key', read_cookie(\"key\"));\n            formData.append('content', this.inputContent.textContent);\n            formData.append('op', \"message\");\n            if (this.state.publication !== null)\n                formData.append('photo', this.state.publication);\n\n\n            this.inputContent.textContent = \"\";\n\n            axios.post(\"http://localhost:8080/TwisterFinal/Messages\", formData)\n                .then(() => {\n                    if (this.props.reload !== undefined) {\n                        this.props.reload();\n                    }\n                    this.setState({\n                        publication: null,\n                        file: null\n                    })\n                });\n\n\n        }\n\n\n    }\n\n    onChange(event) {\n        this.setState({\n            file: event.target.files[0]\n        });\n        if (event.target.files && event.target.files[0]) {\n            let reader = new FileReader();\n            reader.onload = (e) => {\n\n                this.setState({\n                    publication: e.target.result\n                });\n            };\n            reader.readAsDataURL(event.target.files[0]);\n        }\n\n    }\n\n\n    render() {\n        return (<div className=\"PostMessage\">\n            <div className=\"labels\">\n                Postez un message\n            </div>\n            {\n                this.state.publication &&\n                <div className=\"photo\">\n                    <a><img src={this.state.publication} alt=\"\"/></a>\n                </div>\n            }\n            <div onKeyPress={\n                event => {\n                    if (event.key === \"Enter\")\n                        this.postTwist();\n                }\n            }\n                 ref={(inputContent) => {\n                     this.inputContent = inputContent\n                 }}\n                 contentEditable=\"true\" className=\"newMessage\"/>\n            <label htmlFor=\"uploader\" className=\"pictureUpload\"><img src={addpicture}/></label>\n            <input className=\"input-file\" id=\"uploader\" type=\"file\" name=\"myImage\" accept=\"image/*\"\n                   onChange={(e) => this.onChange(e)}/>\n            <input type=\"submit\" className=\"myButton\" value=\"Publier\" onClick={() => this.postTwist()}/>\n        </div>);\n\n    }\n\n\n}\n","/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/Composants/Messages.js",["219","220","221","222","223","224","225","226","227","228","229"],"import React, {Component} from \"react\";\nimport PostRespond from \"./PostRespond\";\nimport Comments from \"./Comments\";\nimport '../Styles/Articles.css'\nimport profile from '../res/profile.png'\nimport {read_cookie} from \"sfcookies\";\nimport axios from 'axios'\n\nexport function timeSince(time) {\n\n\n    switch (typeof time) {\n        case 'number':\n            break;\n        case 'string':\n            time = +new Date(time);\n            break;\n        case 'object':\n            if (time.constructor === Date) time = time.getTime();\n            break;\n        default:\n            time = +new Date();\n    }\n    const time_formats = [\n        [60, 'secondes', 1],\n        [120, 'une minute'],\n        [3600, 'minutes', 60],\n        [7200, 'une heure'],\n        [86400, 'heures', 3600],\n        [172800, 'un jour'],\n        [604800, 'jours', 86400],\n        [1209600, 'semaine'],\n        [2419200, 'semaines', 604800],\n        [4838400, 'un mois'],\n        [29030400, 'mois', 2419200],\n        [58060800, 'un an'],\n        [2903040000, 'ans', 29030400],\n\n    ];\n    const seconds = (+new Date() - time) / 1000,\n        token = 'il y a ',\n        list_choice = 1;\n\n    if (seconds < 5) {\n        return 'Maintenant'\n    }\n\n    let i = 0,\n        format;\n    while (format = time_formats[i++])\n        if (seconds < format[0]) {\n            if (typeof format[2] !== 'number')\n                return token + format[list_choice];\n            else\n                return token + Math.floor(seconds / format[2]) + ' ' + format[1];\n        }\n    return time;\n\n}\n\nexport default class Messages extends Component {\n\n    constructor(props) {\n        super(props);\n\n\n        let articles = [];\n\n        if (this.props.listComment !== undefined) {\n            articles = this.props.listComment;\n        }\n\n        this.state = {\n            date: this.props.date,\n            idUser: this.props.idUser,\n            id: this.props.id,\n            publication: this.props.publication,\n            file: null,\n            writeComment: false,\n            likeUsers: [],\n            likes: this.props.likes,\n            liked: this.props.likes ? this.props.likes.some(idLike => idLike === this.props.idUser) : false,\n            showComments: false,\n            articles: articles\n        }\n\n    }\n\n\n    componentWillReceiveProps(nextProps) {\n        if (this.props.listComment !== undefined) {\n            this.setState({\n                articles: nextProps.listComment\n            });\n        }\n        this.setState({\n            idUser: nextProps.idUser,\n            id: nextProps.id,\n            date: nextProps.date,\n        })\n\n    }\n\n\n    onError() {\n        this.setState({\n            image: profile\n        })\n    }\n\n    componentDidMount() {\n        const params = new URLSearchParams();\n        params.append('key', read_cookie(\"key\"));\n        params.append('id', this.props.id);\n\n        axios.get(\"http://localhost:8080/TwisterFinal/Image?\" + params)\n            .then(res => {\n                this.setState({\n                    image: res.data\n                })\n            });\n        this.getLikesUsers();\n    }\n\n\n    doLike() {\n        if (!this.state.liked) {\n            const params = new URLSearchParams();\n            params.append('key', read_cookie(\"key\"));\n            params.append('idMessage', this.props.messageId);\n            params.append('op', \"like\");\n\n            axios.post(\"http://localhost:8080/TwisterFinal/Messages\", params)\n                .then(res => {\n                    if (res.data.state === \"OK\") {\n                        const array = this.state.likes;\n                        const index = array.indexOf(this.props.idUser);\n                        if (index === -1) {\n                            array.push(this.props.idUser);\n                            this.setState({\n                                likes: array,\n                                liked: !this.state.liked\n                            });\n                        }\n                        this.getLikesUsers()\n                    }\n                });\n        }\n        else {\n            const params = new URLSearchParams();\n            params.append('key', read_cookie(\"key\"));\n            params.append('idMessage', this.props.messageId);\n            params.append('op', \"dislike\");\n            axios.post(\"http://localhost:8080/TwisterFinal/Messages\", params)\n                .then(res => {\n                    console.log(res.data.state);\n                    if (res.data.state === \"OK\") {\n                        const array = this.state.likes;\n                        const index = array.indexOf(this.props.idUser);\n                        if (index !== -1) {\n                            array.splice(index, 1);\n                            this.setState({\n                                likes: array,\n                                liked: !this.state.liked\n                            });\n                        }\n                        this.getLikesUsers()\n\n                    }\n                });\n        }\n    }\n\n    removeMessage() {\n        if (this.state.idUser === this.state.id) {\n            const params = new URLSearchParams();\n            params.append('key', read_cookie(\"key\"));\n            params.append('idMessage', this.props.messageId);\n            params.append('op', \"del\");\n\n            axios.post(\"http://localhost:8080/TwisterFinal/Messages\", params)\n                .then(res => {\n                    if (res.data.state === \"OK\") {\n                        this.props.reload();\n                    }\n                });\n        }\n\n    }\n\n    getLikesUsers() {\n        this.setState({likeUsers: []});\n        this.state.likes.map((id) => {\n            const params = new URLSearchParams();\n            params.append('key', read_cookie(\"key\"));\n            params.append('idUser', id);\n\n            axios.post(\"http://localhost:8080/TwisterFinal/Login\", params)\n                .then(res => {\n                    const Array = this.state.likeUsers;\n                    Array.push(res.data);\n                    this.setState({likeUsers: Array})\n                })\n        })\n    }\n\n    render() {\n\n\n        return (<div className=\"Articles\">\n\n                {\n                    this.state.idUser === this.state.id &&\n                    <a className=\"close\" onClick={() => this.removeMessage()}>✕</a>\n                }\n                <div className=\"infos\">\n                    <a\n                        onClick={() => this.props.getuserprofile(this.props.id, this.props.login, this.props.name, this.props.lastname)}>\n                        <img className=\"profile\" onError={this.onError.bind(this)} src={this.state.image}/>\n                    </a>\n\n                    <a className=\"name\"\n                       onClick={() => this.props.getuserprofile(this.props.id, this.props.login, this.props.name, this.props.lastname)}>\n\n                        {this.props.name} {this.props.lastname}\n                    </a>\n\n                    <div className=\"username\">\n                        @{this.props.login} •\n                        <label className=\"date\">\n                            {timeSince(new Date(this.state.date))}\n                        </label>\n                    </div>\n\n                </div>\n                <div className=\"content\">\n                    {this.props.content}\n                </div>\n                {\n                    this.state.publication &&\n                    <div className=\"photo\">\n                        <a href={this.state.publication}><img src={this.state.publication} alt=\"\"/></a>\n                    </div>\n                }\n\n                <div className=\"Reaction\">\n                    <a onClick={() => this.doLike()}\n                       className=\"inlined\">{this.state.liked ? \"Je n'aime plus\" : \"J'aime\"}</a>\n                    <a\n                        onClick={() => this.setState({writeComment: !this.state.writeComment})}\n                        className=\"inlined\">Commenter</a>\n\n                    <a className=\"showComments\"\n                       onClick={() => this.setState({showComments: !this.state.showComments})}>\n                        {this.state.articles.length > 0 && this.state.articles.length + ' Commentaire(s)'}\n                    </a>\n                    <br/>\n\n\n                    {\n                        <div className=\"dropdown\">\n                            {\n                                this.state.likes.length > 0 &&\n                                <a className=\"dropbtn\"\n                                   onClick={() => this.setState({showList: !this.state.showList})}> {this.state.likes.length + ' Like(s)'}</a>\n\n                            }\n                            {\n                                this.state.showList &&\n\n                                <div className=\"dropdown-content\">\n                                    {\n\n                                        this.state.likeUsers.map((user) =>\n                                            <a\n                                                className=\"name\"\n                                                onClick={() => this.props.getuserprofile(user.user, user.login, user.nom, user.prenom)}\n                                            >\n                                                {user.prenom} {user.nom}\n                                            </a>)\n\n                                    }\n\n                                </div>\n                            }\n\n                        </div>\n                    }\n\n\n                </div>\n\n\n                {\n                    this.state.showComments && this.state.articles.length > 0 &&\n                    <div className=\"Comments\">\n                        {this.state.articles.map((article) => (\n                            <Comments\n                                date={article.date}\n                                idUser={this.props.idUser}\n                                getuserprofile={this.props.getuserprofile}\n                                parentId={this.props.messageId}\n                                name={article.author.prenom}\n                                id={article.author.user_id}\n                                lastname={article.author.nom}\n                                login={article.author.login}\n                                content={article.message}\n                                listComment={article.comments}\n                                messageId={article.message_id}\n                                likes={article.likes}\n                                key={article.message_id}\n                                reload={this.props.reload}\n                            />\n                        ))}\n                    </div>\n                }\n                {\n                    this.state.writeComment &&\n                    <PostRespond reload={this.props.reload} parentId={this.props.messageId} parentCom={this}/>\n                }\n            </div>\n        );\n\n\n    }\n\n\n}\n","/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/Composants/ListFriend.js",[],"/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/Composants/ProfileHeader.js",[],"/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/Composants/Stat.js",["230","231","232"],"import React, {Component} from \"react\";\nimport '../Styles/Stat.css'\nimport {read_cookie} from \"sfcookies\";\nimport axios from 'axios'\nimport ListApprove from \"./ListApprove\";\n\nexport default class Stat extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            twist: this.props.twists,\n            followers: null,\n            following: null,\n            isFriend: true,\n            isRequested: false\n        }\n    }\n\n\n    componentWillReceiveProps(nextProps) {\n        this.setState({\n            twist: nextProps.twists,\n            isFriend: nextProps.isFriend,\n            isRequested: nextProps.isRequested\n        })\n\n    }\n\n    componentDidMount() {\n        const params1 = new URLSearchParams();\n\n        params1.append('key', read_cookie(\"key\"));\n        params1.append('op', \"follower\");\n\n        axios.get(\"http://localhost:8080/TwisterFinal/Friends?\" + params1)\n            .then(res => {\n                this.setState(() => {\n                    return {followers: res.data.Array};\n                });\n\n            });\n\n\n        const params2 = new URLSearchParams();\n\n        params2.append('key', read_cookie(\"key\"));\n        params2.append('op', \"following\");\n\n        axios.get(\"http://localhost:8080/TwisterFinal/Friends?\" + params2)\n            .then(res => {\n                this.setState(() => {\n                    return {following: res.data.Array};\n                });\n\n            });\n\n\n        if (this.props.idShow !== undefined) {\n            const params3 = new URLSearchParams();\n\n            params3.append('key', read_cookie(\"key\"));\n            params3.append('op', \"requested\");\n            params3.append('id', this.props.idShow);\n\n\n            axios.post(\"http://localhost:8080/TwisterFinal/Friends?\", params3)\n                .then(res => {\n                    this.setState({\n                        isFriend: res.data.isFriend,\n                        isRequested: res.data.isRequested\n\n                    });\n                });\n        }\n\n    }\n\n\n    sendRequest() {\n        const params = new URLSearchParams();\n\n        params.append('key', read_cookie(\"key\"));\n        params.append('op', \"req\");\n        params.append('id', this.props.idShow);\n\n        axios.post(\"http://localhost:8080/TwisterFinal/Friends?\", params)\n            .then(() => {\n                this.setState({\n                    isRequested: true\n                });\n\n            });\n    }\n\n    removeFriend() {\n        const params = new URLSearchParams();\n\n        params.append('key', read_cookie(\"key\"));\n        params.append('id', this.props.idShow);\n        params.append('op', \"del\");\n\n\n        axios.post(\"http://localhost:8080/TwisterFinal/Friends?\", params)\n            .then(() => {\n                this.setState({\n                    isFriend: false\n                });\n            });\n    }\n\n    getRequestSection() {\n        if (this.props.getuserprofile !== undefined) {\n            return <ListApprove getuserprofile={this.props.getuserprofile}/>\n\n        }\n        else {\n            if (!this.state.isFriend) {\n                if (!this.state.isRequested) {\n                    return <div className=\"sendRequest\">\n                        <a onClick={() => this.sendRequest()}>Suivre ce profil</a>\n                    </div>\n                }\n                else {\n                    return <div className=\"sendRequest\">\n                        <a>Demande envoyé</a>\n                    </div>\n                }\n            }\n            else {\n                return <div className=\"sendRequest\">\n                    <a onClick={() => this.removeFriend()}>Se désabonner</a>\n                </div>\n            }\n        }\n\n    }\n\n    render() {\n\n\n        return (<div className=\"Stat\">\n            <div className=\"head\"> Statistiques</div>\n\n            <div className=\"twist\">\n                Nombre de twists: {this.state.twist}\n            </div>\n            {\n                this.state.followers &&\n                <div className=\"follower\">\n                    Nombre d'abonnés: {this.state.followers.length}\n                </div>\n            }\n            {\n                this.state.following &&\n                <div className=\"following\">\n                    Nombre d'abonnements: {this.state.following.length}\n                </div>\n\n            }\n\n            {\n                this.getRequestSection()\n            }\n\n        </div>);\n\n\n    }\n\n\n}\n","/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/Composants/ListSearch.js",[],"/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/Composants/Search.js",["233"],"import React, {Component} from \"react\";\nimport \"../Styles/Recherche.css\"\nimport {read_cookie} from \"sfcookies\";\nimport axios from 'axios'\n\nexport default class Search extends Component {\n\n    constructor(props) {\n        super(props);\n\n\n    }\n\n    handleSearch() {\n        if (!(this.inputSearch.value === \"\")) {\n            const params1 = new URLSearchParams();\n\n            params1.append('key', read_cookie(\"key\"));\n            params1.append('query', this.inputSearch.value);\n            axios.post(\"http://localhost:8080/TwisterFinal/Search?\", params1)\n                .then(res => {\n                    this.inputSearch.value = \"\";\n                    this.props.doSearch(res.data[1].Users, res.data[0].Messages[0])\n                });\n\n        }\n    }\n\n\n    render() {\n\n        return (\n\n            <div className=\"Recherche\">\n                <div className=\"inlined\">\n                    <input\n                        onKeyPress={event => {\n                            if (event.key === \"Enter\")\n                                this.handleSearch();\n\n                        }\n                        }\n\n                        ref={(inputSearch) => {\n                            this.inputSearch = inputSearch\n                        }}\n                        type=\"text\" className=\"search\"/>\n                </div>\n                <div className=\"inlined\">\n                    <input type=\"submit\" className=\"myButton\" value=\"Search\" onClick={() => this.handleSearch()\n                    }/>\n\n                </div>\n            </div>\n\n\n        );\n\n\n    }\n\n\n}\n","/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/Composants/PostRespond.js",["234"],"import React, {Component} from \"react\";\nimport \"../Styles/RespondItem.css\"\nimport axios from 'axios'\nimport {read_cookie} from \"sfcookies\";\n\nexport default class PostRespond extends Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    postComment() {\n        if (this.inputContent.textContent !== \"\") {\n            const params = new URLSearchParams();\n\n            params.append('key', read_cookie(\"key\"));\n            params.append('content', this.inputContent.textContent);\n            params.append('op', \"comment\");\n            params.append('idMessage', this.props.parentId);\n\n\n            axios.post(\"http://localhost:8080/TwisterFinal/Messages\", params)\n                .then(() => {\n                    this.inputContent.textContent = \"\";\n\n                    if (this.props.reload !== undefined) {\n                        this.props.parentCom.setState({\n                            writeComment: false,\n                            showComments: true\n                        });\n                        this.props.reload();\n                    }\n                });\n        }\n    }\n\n    render() {\n        return (<div className=\"RespondItem\">\n            <div onKeyPress={\n                event => {\n                    if (event.key === \"Enter\")\n                        this.postComment();\n                }\n            }\n                 ref={(inputContent) => {\n                     this.inputContent = inputContent\n                 }}\n                 contentEditable=\"true\" className=\"newMessage\"/>\n            <input type=\"submit\" className=\"myButton\" value=\"Send\" onClick={() => this.postComment()}/>\n        </div>);\n\n    }\n\n\n}\n","/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/Composants/ListApprove.js",[],"/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/Composants/Comments.js",["235","236","237","238","239","240","241","242","243","244","245"],"import React, {Component} from \"react\";\nimport PostRespond from \"./PostRespond\";\nimport '../Styles/Comment.css'\nimport profile from '../res/profile.png'\nimport {read_cookie} from \"sfcookies\";\nimport axios from 'axios'\nimport {timeSince} from \"./Messages\";\n\nexport default class Comments extends Component {\n\n    constructor(props) {\n        super(props);\n\n        let comments = [];\n\n        if (this.props.listComment !== undefined) {\n            comments = this.props.listComment;\n        }\n        this.state = {\n            date: this.props.date,\n            idUser: this.props.idUser,\n            id: this.props.id,\n            file: null,\n            writeComment: false,\n            likes: this.props.likes ? this.props.likes : [],\n            likeUsers: [],\n            liked: this.props.likes ? this.props.likes.some(idLike => idLike === this.props.idUser) : false,\n            comments: comments,\n            showComments: false\n        }\n\n    }\n\n    componentWillReceiveProps(nextProps) {\n\n\n        if (this.props.listComment !== undefined) {\n            this.setState({\n                comments: nextProps.listComment\n            });\n        }\n        this.setState({\n            idUser: nextProps.idUser,\n            id: nextProps.id,\n            date: nextProps.date,\n\n        })\n\n    }\n\n    componentDidMount() {\n        const params = new URLSearchParams();\n        params.append('key', read_cookie(\"key\"));\n        params.append('id', this.props.id);\n\n        axios.get(\"http://localhost:8080/TwisterFinal/Image?\" + params)\n            .then(res => {\n                this.setState({\n                    image: res.data\n                })\n            });\n        this.getLikesUsers();\n\n    }\n\n    onError() {\n        this.setState({\n            image: profile\n        })\n    }\n\n    getLikesUsers() {\n        this.setState({likeUsers: []});\n        this.state.likes.map((id) => {\n            const params = new URLSearchParams();\n            params.append('key', read_cookie(\"key\"));\n            params.append('idUser', id);\n\n            axios.post(\"http://localhost:8080/TwisterFinal/Login\", params)\n                .then(res => {\n                    const Array = this.state.likeUsers;\n                    Array.push(res.data);\n                    this.setState({likeUsers: Array})\n                })\n        })\n    }\n\n    doLike() {\n        if (!this.state.liked) {\n            const params = new URLSearchParams();\n            params.append('key', read_cookie(\"key\"));\n            params.append('idMessage', this.props.messageId);\n            params.append('op', \"like\");\n\n            axios.post(\"http://localhost:8080/TwisterFinal/Messages\", params)\n                .then(res => {\n                    console.log(res.data.state);\n                    if (res.data.state === \"OK\") {\n                        const array = this.state.likes;\n                        const index = array.indexOf(this.props.idUser);\n                        if (index === -1) {\n                            array.push(this.props.idUser);\n                            this.setState({\n                                likes: array,\n                                liked: !this.state.liked\n                            });\n                        }\n                        this.getLikesUsers()\n\n                    }\n                });\n        }\n        else {\n            const params = new URLSearchParams();\n            params.append('key', read_cookie(\"key\"));\n            params.append('idMessage', this.props.messageId);\n            params.append('op', \"dislike\");\n            axios.post(\"http://localhost:8080/TwisterFinal/Messages\", params)\n                .then(res => {\n                    if (res.data.state === \"OK\") {\n                        const array = this.state.likes;\n                        const index = array.indexOf(this.props.idUser);\n                        if (index !== -1) {\n                            array.splice(index, 1);\n                            this.setState({\n                                likes: array,\n                                liked: !this.state.liked\n                            });\n                        }\n\n                    }\n                    this.getLikesUsers()\n\n                });\n        }\n    }\n\n    removeMessage() {\n        if (this.state.idUser === this.state.id) {\n            const params = new URLSearchParams();\n            params.append('key', read_cookie(\"key\"));\n            params.append('idMessage', this.props.messageId);\n            params.append('op', \"del\");\n\n            axios.post(\"http://localhost:8080/TwisterFinal/Messages\", params)\n                .then(res => {\n                    if (res.data.state === \"OK\") {\n                        this.props.reload();\n                    }\n                });\n        }\n\n    }\n\n    render() {\n        return (<div className=\"Comment\">\n            {\n                this.state.idUser === this.state.id &&\n                <a className=\"close\" onClick={() => this.removeMessage()}>✕</a>\n            }\n\n            <div className=\"infos\">\n                <a\n                    onClick={() => this.props.getuserprofile(this.props.id, this.props.login, this.props.name, this.props.lastname)}>\n                    <img onError={this.onError.bind(this)} src={this.state.image}/>\n                </a>\n\n                <a className=\"name\"\n                   onClick={() => this.props.getuserprofile(this.props.id, this.props.login, this.props.name, this.props.lastname)}>\n                    {this.props.name} {this.props.lastname}\n                </a>\n\n                <div className=\"username\">\n                    @{this.props.login} •\n                    <a className=\"date\">\n\n                        {timeSince(new Date(this.state.date))}\n                    </a>\n                </div>\n            </div>\n            <div className=\"content\">\n                {this.props.content}\n            </div>\n            <div className=\"Reaction\">\n                <a onClick={() => this.doLike()}\n                   className=\"inlined\">{this.state.liked ? \"Je n'aime plus\" : \"J'aime\"}</a>\n                <a\n                    onClick={() => this.setState({writeComment: !this.state.writeComment})}\n                    className=\"inlined\">Commenter</a>\n\n                <a className=\"showComments\"\n                   onClick={() => this.setState({showComments: !this.state.showComments})}>\n                    {this.state.comments.length > 0 && this.state.comments.length + ' Commentaire(s)'}\n                </a>\n\n                {\n                    <div className=\"dropdown\">\n                        {\n                            this.state.likes.length > 0 &&\n                            <a className=\"dropbtn\"\n                               onClick={() => this.setState({showList: !this.state.showList})}> {this.state.likes.length + ' Like(s)'}</a>\n\n                        }\n                        {\n                            this.state.showList &&\n\n                            <div className=\"dropdown-content\">\n                                {\n                                    this.state.likeUsers.map((user) => <a>{user.nom} {user.prenom}</a>)\n\n                                }\n\n                            </div>\n                        }\n\n                    </div>\n                }\n\n\n            </div>\n\n            {\n                this.state.showComments && this.state.comments.length > 0 &&\n                <div className=\"Comments\">\n                    {this.state.comments.map((article) => (\n                        <Comments\n                            date={article.date}\n                            idUser={this.props.idUser}\n                            getuserprofile={this.props.getuserprofile}\n                            parentId={this.props.messageId}\n                            name={article.author.prenom}\n                            id={article.author.user_id}\n                            lastname={article.author.nom}\n                            login={article.author.login}\n                            content={article.message}\n                            listComment={article.comments}\n                            messageId={article.message_id}\n                            likes={article.likes}\n                            key={article.message_id}\n                            reload={this.props.reload}\n\n                        />\n                    ))}\n                </div>\n            }\n\n            {this.state.writeComment &&\n            <PostRespond reload={this.props.reload} parentId={this.props.messageId}\n                         parentCom={this}/>}\n\n        </div>);\n\n\n    }\n\n\n}\n","/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/Composants/ItemFriend.js",["246","247"],"import React, {Component} from \"react\";\nimport '../Styles/Articles.css'\nimport profile from '../res/profile.png'\nimport '../Styles/Amis.css'\nimport {read_cookie} from \"sfcookies\";\nimport axios from 'axios'\n\nexport default class ItemFriend extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            image: profile\n        }\n\n    }\n\n\n    onError() {\n        this.setState({\n            image: profile\n        })\n    }\n\n    componentDidMount() {\n        const params = new URLSearchParams();\n        params.append('key', read_cookie(\"key\"));\n        params.append('id', this.props.id);\n\n        axios.get(\"http://localhost:8080/TwisterFinal/Image?\" + params)\n            .then(res => {\n                this.setState({\n                    image: res.data\n                })\n            });\n    }\n\n\n    render() {\n\n\n        return (<div className=\"Amis\"\n                     onClick={() => this.props.getuserprofile(this.props.id, this.props.login, this.props.nom, this.props.prenom)}>\n                <div className=\"photo\">\n                    <a>\n                        <img className=\"profile\" onError={this.onError.bind(this)} src={this.state.image}/>\n                    </a>\n\n                </div>\n                <div className=\"infos\">\n                    <div className=\"name\">\n                        {this.props.prenom} {this.props.nom}\n                    </div>\n\n                </div>\n            </div>\n        );\n\n\n    }\n\n\n}\n","/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/Composants/ItemApprove.js",["248","249","250","251"],"import React, {Component} from \"react\";\nimport '../Styles/Articles.css'\nimport profile from '../res/profile.png'\nimport '../Styles/Amis.css'\nimport {read_cookie} from \"sfcookies\";\nimport axios from 'axios'\n\nexport default class ItemApprove extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            clicked: false,\n            image: profile\n        }\n\n    }\n\n\n    onError() {\n        this.setState({\n            image: profile\n        })\n    }\n\n    componentDidMount() {\n        const params = new URLSearchParams();\n        params.append('key', read_cookie(\"key\"));\n        params.append('id', this.props.id);\n\n        axios.get(\"http://localhost:8080/TwisterFinal/Image?\" + params)\n            .then(res => {\n                this.setState({\n                    image: res.data\n                })\n            });\n    }\n\n\n    disapprove() {\n\n\n        const params1 = new URLSearchParams();\n\n        params1.append('key', read_cookie(\"key\"));\n        params1.append('op', \"dis\");\n        params1.append('id', this.props.id);\n\n\n        axios.post(\"http://localhost:8080/TwisterFinal/Friends?\", params1)\n            .then(() => {\n                this.setState({\n                    clicked: true\n                });\n\n\n            });\n    }\n\n    approve() {\n        const params1 = new URLSearchParams();\n\n        params1.append('key', read_cookie(\"key\"));\n        params1.append('op', \"app\");\n        params1.append('id', this.props.id);\n\n\n        axios.post(\"http://localhost:8080/TwisterFinal/Friends?\", params1)\n            .then(() => {\n                this.setState({\n                    clicked: true\n                });\n\n            });\n    }\n\n    render() {\n\n\n        return (<div className=\"Approuve\">\n                <div\n                    onClick={() => this.props.getuserprofile(this.props.id, this.props.login, this.props.name, this.props.lastname)}\n                    className=\"photo\">\n                    <a>\n                        <img className=\"profile\" onError={this.onError.bind(this)} src={this.state.image}/>\n                    </a>\n\n                </div>\n                <div className=\"infos\">\n                    <div\n                        onClick={() => this.props.getuserprofile(this.props.id, this.props.login, this.props.name, this.props.lastname)}\n                        className=\"name\">\n                        {this.props.name} {this.props.lastname}\n                    </div>\n\n                </div>\n\n                {!this.state.clicked &&\n                <div className=\"approvement\">\n                    <a className=\"approve\" onClick={() => this.approve()}>\n                        Approve\n                    </a>\n                    <a className=\"disapprove\" onClick={() => this.disapprove()}>\n                        Disapprove\n                    </a>\n                </div>\n                }\n            </div>\n        );\n\n\n    }\n\n\n}\n","/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/components/Header.js",["252"],"import React, {Component} from \"react\";\nimport {connect} from 'react-redux';\n\nclass Header extends Component {\n\n    render() {\n      return (\n        <div>\n          {this.props.user.admin && \n            <div class=\"bg-primary text-light\" style={{paddingLeft: 12}}>\n              Mode administrateur\n            </div>\n          }\n          <nav class={\"navbar navbar-light bg-light\"}>\n            <div class=\"container-fluid\">\n              <a class=\"navbar-brand\" onClick={() => window.location.href='/'}>Conferentia</a>\n              <div class=\"d-flex\">\n                {!this.props.user.admin && \n                  <button \n                    class=\"btn btn-link\" \n                    onClick={() => window.location.href = \"/me\"}>\n                    {this.props.user.firstName} {this.props.user.lastName} \n                  </button>\n                }\n                <button \n                  class=\"btn btn-outline-primary\" \n                  onClick={() => window.location.href = \"/logout\"}>\n                  Déconnexion\n                </button>\n              </div>\n            </div>\n          </nav>\n        </div>\n      )\n    }\n\n}\n\nconst mapStateToProps = state => {\n\treturn {\n\t  user: state.user.user,\n\t};\n}\n\nexport default connect(mapStateToProps)(Header);","/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/components/ConferenceList.js",["253","254","255"],"import React, {Component} from \"react\";\nimport axios from 'axios';\nimport {read_cookie} from 'sfcookies';\n\nconst DATA = [\n\t{\n\t\tname: \"Conférence 1\",\n\t\tdate: \"20/01/2020\",\n\t\tdescription: \"Description de la conférence ...\",\n\t\tminPrice: 100,\n\t\tmaxPrice: 250,\n\t\tpending: true,\n\t},\n\t{\n\t\tname: \"Conférence 2\",\n\t\tdate: \"25/01/2020\",\n\t\tdescription: \"Description de la conférence ...\",\n\t\tminPrice: 180,\n\t\tmaxPrice: 450,\n\t}\n]\n\nexport default class Accueil extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\t\tdata: null\n\t\t};\n\n\t\tthis.componentDidMount = this.componentDidMount.bind(this);\n\t}\n\n\n\tcomponentDidMount() {\n\t\tconst params = new URLSearchParams();\n\t\tparams.append('key', read_cookie(\"key\"));\n\n\t\taxios.get(\"http://localhost:8080/Project_war/Conferences?\" + params)\n\t\t.then(res => {\n\t\t    this.setState({data: res.data.Conferences});\n\t\t});\n\t}\n\n\trenderItem(item) {\n\t\treturn (\n\t\t\t<a href={\"/conf/\" + item.id_conf} class=\"list-group-item list-group-item-action\" aria-current=\"true\">\n\t\t\t\t<div class=\"d-flex w-100 justify-content-between\">\n\t\t\t\t\t<h4 class=\"mb-1\">{item.nom}</h4>\n\t\t\t\t\t<small>{item.types.length} types d'inscriptions</small>\n\t\t\t\t</div>\n\t\t\t\t<p class=\"mb-1\">Description</p>\n\t\t\t\t<small>Fin early  {item.date_clot_early}</small><br></br>\n\t\t\t\t<small>Le {item.date_conf}</small>\n\t\t\t</a>\n\t\t)\n\t}\n\n\trenderEmpty() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<p class=\"text-secondary\">Aucune conférence</p>\n\t\t\t</div>\n\t\t)\n\t}\n\n\trender() {\n\t\tlet data = this.state.data;\n\t\tif (!data) return (\n\t\t\t<div/>\n\t\t)\n\t\tif (this.props.filter != 'all') {\n\t\t\tdata = data.filter((item) => {\n\t\t\t\treturn item[this.props.filter] !== undefined;\n\t\t\t});\n\t\t}\n\t\treturn (\n\t\t\t<div class=\"list-group mb-3\">\n\t\t\t\t<div class=\"d-flex flex-row justify-content-between pb-2\">\n\t\t\t\t\t<h3 class=\"mb-2\">{this.props.title}</h3>\n\t\t\t\t\t{this.props.button && this.props.button.title && \n\t\t\t\t\t\t<button \n\t\t\t\t\t\t\tclass=\"btn btn-outline-primary\" \n\t\t\t\t\t\t\tonClick={this.props.button.onClick}>\n\t\t\t\t\t\t\t{this.props.button.title}\n\t\t\t\t\t\t</button>\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t\t{data.map((item) => this.renderItem(item))}\n\t\t\t\t{data.length == 0 && this.renderEmpty()}\n\t\t\t</div>\n\t\t)\n\t}\n}","/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/App.js",["256","257","258","259"],"/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/pages/Home.js",[],"/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/pages/Signup.js",["260"],"import React, {Component} from \"react\";\nimport axios from 'axios';\n\nconst FORM = {\n    mail: {\n        mandatory: true,\n        name: 'email',\n        type: 'email',\n        label: \"Adresse mail\",\n    },\n    password: {\n        mandatory: true,\n        name: 'pass',\n        type: 'password',\n        label: \"Mot de passe\",\n        minLength: 5,\n    },\n    confirmPassword: {\n        verify: 'password',\n        mandatory: true,\n        name: 'confirmPass',\n        type: 'password',\n        label: \"Confirmation du mot de passe\",\n        minLength: 5,\n    },\n    title: {\n        mandatory: true,\n        name: 'title',\n        type: 'select',\n        values: ['Prof', 'Dr','Mr', 'Mrs', 'Ms'],\n        label: \"Titre\",\n    },\n    prenom: {\n        mandatory: true,\n        name: 'firstname',\n        type: 'text',\n        label: \"Prénom\",\n    },\n    nom: {\n        mandatory: true,\n        name: 'lastname',\n        type: 'text',\n        label: \"Nom\",\n    },\n    institution: {\n        mandatory: true,\n        name: 'institution',\n        type: 'text',\n        label: \"Institution\",\n    },\n    address: {\n        mandatory: true,\n        name: 'address',\n        type: 'text',\n        label: \"Adresse\",\n    },\n    zip: {\n        mandatory: true,\n        name: 'zip',\n        type: 'text',\n        label: \"Code postal\",\n    },\n    city: {\n        mandatory: true,\n        name: 'city',\n        type: 'text',\n        label: \"Ville\",\n    },\n    country: {\n        mandatory: true,\n        name: 'country',\n        type: 'text',\n        label: \"Pays\",\n    },\n    phone: {\n        mandatory: true,\n        name: 'institution',\n        type: 'text',\n        label: \"Téléphone\",\n    },\n}\n\nexport default class Signup extends Component {\n\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n\t\t\terrors: {},\n\t\t\tloading: false,\n        };\n\n        this.inputs = [];\n    }\n\n    createUser() {\n        if (this.checkForm()) {\n            const params = new URLSearchParams();\n        \n            for (let index in Object.keys(FORM)) {\n                index = Object.keys(FORM)[index];\n                if (!FORM[index].verify) {\n                    params.append(index, this.inputs[index].value);\n                    console.log(this.inputs[index].value);\n                }\n\t\t\t}\n\t\t\t\n\t\t\tthis.setState({loading: true});\n\n            axios.post(\"http://localhost:8080/Project_war/CreateUser\", params)\n            .then(res => {\n                if (res.data.code === undefined) {\n                    window.location.href = '/login/ok';\n                } else {\n                    let errors = {};\n                    errors[\"serverError\"] = res.data.message;\n                    this.setState({errors})\n                }\n            });\n        }\n    }\n\n    checkForm() {\n        let errors = {};\n\t\tlet formIsValid = true;\n\t\tlet scroll = false;\n\n        for (let index in Object.keys(FORM)) {\n            index = Object.keys(FORM)[index];\n            let item = FORM[index];\n            if (item.mandatory && this.inputs[index].value === \"\") {\n                errors[index] = \"Le champ ne peut être vide\";\n                formIsValid = false;\n            } else if (item.regex && !this.inputs[index].value.match(item.regex)) {\n                this.inputs[index].value = \"\";\n                formIsValid = false;\n                errors[index] = \"Uniquement des caractères\";\n            } else if (item.minLength && this.inputs[index].value.length < item.minLength) {\n                this.inputs[index].value = \"\";\n                formIsValid = false;\n                errors[index] = `Minimum ${item.minLength} caractères`;\n            } else if (item.verify && this.inputs[index].value !== this.inputs[item.verify].value) {\n                this.inputs[item.verify].value = \"\";\n                this.inputs[index].value = \"\";\n                formIsValid = false;\n                errors[item.verify] = \"Mot de passe non identique\";\n\t\t\t}\n\t\t\tif (!formIsValid && !scroll) {\n\t\t\t\tscroll = true;\n\t\t\t\tthis.inputs[index].scrollIntoView()\n\t\t\t}\n        }\n\n        this.setState({errors});\n        return formIsValid;\n    }\n\n    renderItem(index, item) {\n        let jsx;\n        if (item.type == 'select' && item.values) {\n            jsx = (\n                <select \n                    class=\"form-select\"\n                    ref={() => {\n                        this.inputs[index] = {value: item.values[0]};\n                    }}\n                    onChange={(e) => {\n                        this.inputs[index] = {value: e.target.value};\n                    }}>\n                    {item.values.map((value) => <option value={value}>{value}</option>)}\n                </select>\n          );\n        } else {\n            jsx = (\n            <input \n                type={item.type}\n                name={item.name}\n                class=\"form-control\"\n                id={item.label + \"-input\"}\n                ref={(input) => {\n                    this.inputs[index] = input;\n                }}\n                onKeyPress={\n                    event => {\n                        if (event.key === \"Enter\")\n                            this.createUser();\n                    }\n                }/>\n            );\n        }\n\n        return (\n            <div class=\"mb-4\">\n                <label \n                    for={item.label + \"-input\"}\n                    class=\"form-label\">\n                    {item.mandatory &&\n                        <span class=\"text-danger\">* </span>\n                    }\n                    {item.label}\n\n                </label>\n                {this.state.errors[index] && \n                    <div class=\"alert alert-danger p-2\" role=\"alert\">\n                        {this.state.errors[index]}\n                    </div>\n                }\n                {jsx}\n            </div>\n        )\n\t}\n\n    render() {\n        return (\n\t\t\t<div>\n\t\t\t\t<div class=\"container box box-sm mt-5 p-4 mb-5\">\n\t\t\t\t\t\n\t\t\t\t\t<h1 class=\"mb-3\">Inscription</h1>\n\t\t\t\t\t<p class=\"mb-4\">\n\t\t\t\t\t\tLes champs obligatoires sont marqués par\n\t\t\t\t\t\t<span class=\"text-danger\"> * </span>.\n\t\t\t\t\t</p>\n\n\t\t\t\t\t{this.state.errors[\"serverError\"] && \n\t\t\t\t\t\t<div class=\"alert alert-danger p-2\" role=\"alert\">\n\t\t\t\t\t\t\t{this.state.errors[\"serverError\"]}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t}\n\n\t\t\t\t\t{this.state.errors[\"email\"] && \n\t\t\t\t\t\t<div class=\"alert alert-danger p-2\" role=\"alert\">\n\t\t\t\t\t\t\t{this.state.errors[\"email\"]}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t}\n\n\t\t\t\t\t<form>\n\t\t\t\t\t\t<fieldset disabled={this.state.loading}>\n\t\t\t\t\t\t\t{Object.keys(FORM).map((item) => this.renderItem(item, FORM[item]))}\n\t\t\t\t\t\t</fieldset>\n\t\t\t\t\t</form>\n\t\t\t\t\t<div class=\"d-flex justify-content-center\">\n\t\t\t\t\t\t{!this.state.loading &&\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\tname=\"connexion\"\n\t\t\t\t\t\t\t\tonClick={() => this.createUser()}\n\t\t\t\t\t\t\t\tclass=\"btn btn-primary m-1\">\n\t\t\t\t\t\t\t\tInscription\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t}\t\n\t\t\t\t\t\t{this.state.loading && \n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\tname=\"connexion\"\n\t\t\t\t\t\t\t\tdisabled\n\t\t\t\t\t\t\t\tclass=\"btn btn-primary m-1\">\n\t\t\t\t\t\t\t\t<div class=\"d-flex align-items-center\">\n\t\t\t\t\t\t\t\t\t<span class=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\n\t\t\t\t\t\t\t\t\t&nbsp;Chargement...\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t}\n\t\t\t\t\t\t<button \n\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\tname=\"connexion\"\n\t\t\t\t\t\t\tdisabled={this.state.loading}\n\t\t\t\t\t\t\tonClick={() => window.location.href = '/login'}\n\t\t\t\t\t\t\tclass=\"btn btn-light m-1\">\n\t\t\t\t\t\t\tJ'ai déjà un compte\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n        )\n    }\n\n}\n","/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/pages/Profile.js",["261","262"],"import React, {Component} from \"react\";\nimport {connect} from \"react-redux\";\n\nimport {read_cookie} from 'sfcookies';\nimport axios from 'axios';\n\nimport Header from '../components/Header';\n\nconst FORM = {\n  title: {\n      name: 'title',\n      type: 'select',\n      values: ['Prof', 'Dr','Mr', 'Mrs', 'Ms'],\n      label: \"Titre\",\n  },\n  prenom: {\n      name: 'firstname',\n      type: 'text',\n      label: \"Prénom\",\n  },\n  nom: {\n      name: 'lastname',\n      type: 'text',\n      label: \"Nom\",\n  },\n  institution: {\n      name: 'institution',\n      type: 'text',\n      label: \"Institution\",\n  },\n  address: {\n      name: 'address',\n      type: 'text',\n      label: \"Adresse\",\n  },\n  zip: {\n      name: 'zip',\n      type: 'text',\n      label: \"Code postal\",\n  },\n  city: {\n      name: 'city',\n      type: 'text',\n      label: \"Ville\",\n  },\n  country: {\n      name: 'country',\n      type: 'text',\n      label: \"Pays\",\n  },\n  phone: {\n      name: 'institution',\n      type: 'text',\n      label: \"Téléphone\",\n  },\n}\n\nclass Profile extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\terrors: {},\n\t\t\tloading: false,\n\t\t};\n\n\t\tthis.inputs = [];\n\t}\n\n\tcomponentDidMount() {\n\t\tconst params = new URLSearchParams();\n\t\tparams.append('key', read_cookie(\"key\"));\n\t\tparams.append('idUser', this.props.user.id);\n\n\t\taxios.post(\"http://localhost:8080/Project_war/GetUserInfos\", params)\n\t\t.then(res => {\n\t\t\tif (res.data.code === undefined) {\n\t\t\tthis.setState({infos: res.data});\n\t\t\tconsole.log(res.data);\n\t\t\t}\n\t\t}\n\t\t);\n\t}\n\n\tmodifyUser() {\n\t\tif (this.checkForm()) {\n            const params = new URLSearchParams();\n        \n            for (let index in Object.keys(FORM)) {\n                index = Object.keys(FORM)[index];\n                if (!FORM[index].verify) {\n                    params.append(index, this.inputs[index].value);\n                    console.log(this.inputs[index].value);\n                }\n\t\t\t}\n\t\t\t\n\t\t\tthis.setState({loading: true});\n\n            // axios.post(\"http://localhost:8080/Project_war/CreateUser\", params)\n            // .then(res => {\n            //     if (res.data.code === undefined) {\n            //         window.location.href = '/login/ok';\n            //     } else {\n            //         let errors = {};\n            //         errors[\"serverError\"] = res.data.message;\n            //         this.setState({errors})\n            //     }\n            // });\n        }\n\t}\n\n\tcheckForm() {\n\t\tlet errors = {};\n\t\tlet formIsValid = true;\n\t\tlet scroll = false;\n\n\t\tfor (let index in Object.keys(FORM)) {\n\t\t\tindex = Object.keys(FORM)[index];\n\t\t\tlet item = FORM[index];\n\t\t\tif (this.inputs[index].value === \"\") {\n\t\t\t\terrors[index] = \"Le champ ne peut être vide\";\n\t\t\t\tformIsValid = false;\n\t\t\t} else if (item.regex && !this.inputs[index].value.match(item.regex)) {\n\t\t\t\tthis.inputs[index].value = \"\";\n\t\t\t\tformIsValid = false;\n\t\t\t\terrors[index] = \"Uniquement des caractères\";\n\t\t\t} else if (item.minLength && this.inputs[index].value.length < item.minLength) {\n\t\t\t\tthis.inputs[index].value = \"\";\n\t\t\t\tformIsValid = false;\n\t\t\t\terrors[index] = `Minimum ${item.minLength} caractères`;\n\t\t\t} else if (item.verify && this.inputs[index].value !== this.inputs[item.verify].value) {\n\t\t\t\tthis.inputs[item.verify].value = \"\";\n\t\t\t\tthis.inputs[index].value = \"\";\n\t\t\t\tformIsValid = false;\n\t\t\t\terrors[item.verify] = \"Mot de passe non identique\";\n\t\t\t}\n\t\t\tif (!formIsValid && !scroll) {\n\t\t\t\tscroll = true;\n\t\t\t\tthis.inputs[index].scrollIntoView()\n\t\t\t}\n\t\t}\n\t\tthis.setState({errors});\n\t\treturn formIsValid;\n\t}\n\n\trenderItem(index, item) {\n\t\tlet jsx;\n\t\tif (item.type == 'select' && item.values) {\n\t\t\tjsx = (\n\t\t\t\t<select \n\t\t\t\t\tclass=\"form-select\"\n\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\tthis.inputs[index] = {value: e.target.value};\n\t\t\t\t\t}}>\n\t\t\t\t\t{item.values.map((value) => {\n\t\t\t\t\t\tconst selected = value == this.state.infos[index];\n\t\t\t\t\t\tif (selected) this.inputs[index] = {value};\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<option \n\t\t\t\t\t\t\t\tvalue={value} \n\t\t\t\t\t\t\t\tselected={selected}>\n\t\t\t\t\t\t\t\t{value}\n\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t)\n\t\t\t\t\t})}\n\t\t\t\t</select>\n\t\t\t);\n\t\t} else {\n\t\t\tjsx = (\n\t\t\t\t<input \n\t\t\t\t\ttype={item.type}\n\t\t\t\t\tname={item.name}\n\t\t\t\t\tclass=\"form-control\"\n\t\t\t\t\tid={item.label + \"-input\"}\n\t\t\t\t\tvalue={this.state.infos[index]}\n\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\tlet infos = this.state.infos;\n\t\t\t\t\t\tinfos[index] = e.target.value;\n\t\t\t\t\t\tthis.setState({infos: infos});\n\t\t\t\t\t}}\n\t\t\t\t\treadOnly={false}\n\t\t\t\t\tref={(input) => {\n\t\t\t\t\t\tthis.inputs[index] = input;\n\t\t\t\t\t}}\n\t\t\t\t\tonKeyPress={\n\t\t\t\t\t\tevent => {\n\t\t\t\t\t\t\tif (event.key === \"Enter\")\n\t\t\t\t\t\t\t\tthis.createUser();\n\t\t\t\t\t\t}\n\t\t\t\t\t}/>\n\t\t\t);\n\t\t}\n\n\t\treturn (\n\t\t\t<div class=\"mb-4\">\n\t\t\t\t<label \n\t\t\t\t\tfor={item.label + \"-input\"}\n\t\t\t\t\tclass=\"form-label\">\n\t\t\t\t\t{item.mandatory &&\n\t\t\t\t\t\t<span class=\"text-danger\">* </span>\n\t\t\t\t\t}\n\t\t\t\t\t{item.label}\n\n\t\t\t\t</label>\n\t\t\t\t{this.state.errors[index] && \n\t\t\t\t\t<div class=\"alert alert-danger p-2\" role=\"alert\">\n\t\t\t\t\t\t{this.state.errors[index]}\n\t\t\t\t\t</div>\n\t\t\t\t}\n\t\t\t\t{jsx}\n\t\t\t</div>\n\t\t)\n\t}\n\n\trenderInfos() {\n\t\tconst { infos } = this.state;\n\t\tif (infos) return (\n\t\t\t<div class=\"box container box-md mt-5 p-3\">\n\t\t\t\t<h2>{this.props.user.login}</h2>\n\t\t\t\t<hr/>\n\t\t\t\t<form>\n\t\t\t\t\t<fieldset disabled={this.state.loading}>\n\t\t\t\t\t{Object.keys(FORM).map((item) => this.renderItem(item, FORM[item]))}\n\t\t\t\t\t</fieldset>\n\t\t\t\t</form>\n\t\t\t\t<div class=\"d-flex justify-content-center\">\n\t\t\t\t\t{!this.state.loading &&\n\t\t\t\t\t<button\n\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\tname=\"connexion\"\n\t\t\t\t\t\tonClick={() => this.modifyUser()}\n\t\t\t\t\t\tclass=\"btn btn-primary m-1\">\n\t\t\t\t\t\tModifier\n\t\t\t\t\t</button>\n\t\t\t\t\t}\t\n\t\t\t\t\t{this.state.loading && \n\t\t\t\t\t<button\n\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\tname=\"connexion\"\n\t\t\t\t\t\tdisabled\n\t\t\t\t\t\tclass=\"btn btn-primary m-1\">\n\t\t\t\t\t\t<div class=\"d-flex align-items-center\">\n\t\t\t\t\t\t<span class=\"spinner-border spinner-border-sm\" role=\"status\" aria-hidden=\"true\"></span>\n\t\t\t\t\t\t&nbsp;Chargement...\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</button>\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div class=\"mb-5\">\n\t\t\t\t<Header/>\n\t\t\t\t{this.state.errors[\"serverError\"] && \n\t\t\t\t\t<div class=\"alert alert-danger p-2\" role=\"alert\">\n\t\t\t\t\t{this.state.errors[\"serverError\"]}\n\t\t\t\t\t</div>\n\t\t\t\t}\n\t\t\t\t{this.renderInfos()}\n\t\t\t</div>\n\t\t)\n\t}\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user.user,\n  };\n}\n\nexport default connect(mapStateToProps)(Profile);","/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/pages/Login.js",["263"],"import React, {Component} from \"react\";\nimport axios from 'axios';\nimport {bake_cookie} from 'sfcookies';\n\nexport default class Login extends Component {\n\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\terror: \"\",\n\t\t\tcheckbox: false\n\t\t}\n\t}\n\n\tcheckValidity() {\n\t\tconst params = new URLSearchParams();\n\t\tparams.append('user', this.inputLogin.value);\n\t\tparams.append('password', this.inputPassword.value);\n\t\tparams.append('root', this.state.checkbox ? \"true\" : \"false\");\n\n\t\taxios.post(\"http://localhost:8080/Project_war/Login\", params)\n\t\t\t.then(res => {\n\t\t\t\tif (res.data.key !== undefined) {\n\t\t\t\t\tbake_cookie(\"key\", res.data.key);\n\t\t\t\t\twindow.location.href = \"/\";\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tif (res.data.code !== -1)\n\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\terror: res.data.message\n\t\t\t\t\t\t});\n\t\t\t\t\telse\n\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\terror: \"Veuillez remplir les champs\"\n\t\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t})\n\n\n\t}\n\n\trenderSignupMsg() {\n\t\tif (this.props.match.params && this.props.match.params.msg === \"ok\") return (\n\t\t\t<div class=\"container box-sm alert alert-success p-2\" role=\"alert\">\n\t\t\t\tVotre compte a été créé ! Connectez-vous\n\t\t\t</div>\n\t\t)\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div class=\"mt-5\">\n\t\t\t\t{this.renderSignupMsg()}\n\t\t\t\t<div class=\"container p-4 box box-sm\">\n\t\t\t\t\t<form>\n\t\t\t\t\t\t<h1 class=\"mb-4\">Conferentia</h1>\n\t\t\t\t\t\t{this.state.error && \n\t\t\t\t\t\t\t<div class=\"alert alert-danger p-2\" role=\"alert\">\n\t\t\t\t\t\t\t{this.state.error}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t}\n\t\t\t\t\t\t<div class=\"mb-4\">\n\t\t\t\t\t\t\t<label \n\t\t\t\t\t\t\t\tfor=\"emailInput\" \n\t\t\t\t\t\t\t\tclass=\"form-label\">\n\t\t\t\t\t\t\t\tAdresse mail\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<input \n\t\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\t\tname=\"login\"\n\t\t\t\t\t\t\t\tclass=\"form-control\"\n\t\t\t\t\t\t\t\tid=\"emailInput\"\n\t\t\t\t\t\t\t\tref={(inputLogin) => {\n\t\t\t\t\t\t\t\t\tthis.inputLogin = inputLogin\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tonKeyPress={\n\t\t\t\t\t\t\t\t\tevent => {\n\t\t\t\t\t\t\t\t\t\tif (event.key === \"Enter\")\n\t\t\t\t\t\t\t\t\t\t\tthis.checkValidity();\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\taria-describedby=\"emailHelp\"/>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"mb-3\">\n\t\t\t\t\t\t\t<label\n\t\t\t\t\t\t\t\tfor=\"passwordInput\" \n\t\t\t\t\t\t\t\tclass=\"form-label\">\n\t\t\t\t\t\t\t\tMot de passe\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<input \n\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\tname=\"pwd\"\n\t\t\t\t\t\t\t\tclass=\"form-control\"\n\t\t\t\t\t\t\t\tref={(inputPassword) => {\n\t\t\t\t\t\t\t\t\tthis.inputPassword = inputPassword\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\tonKeyPress={\n\t\t\t\t\t\t\t\t\tevent => {\n\t\t\t\t\t\t\t\t\t\tif (event.key === \"Enter\")\n\t\t\t\t\t\t\t\t\t\t\tthis.checkValidity();\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tid=\"passwordInput\"/>\n\t\t\t\t\t\t\t\t<a onClick={() => this.props.forgot()}>\n\t\t\t\t\t\t\t\tMot de passe oublié ?\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"mb-3 form-check\">\n\t\t\t\t\t\t\t<input \n\t\t\t\t\t\t\t\ttype=\"checkbox\" \n\t\t\t\t\t\t\t\tdefaultChecked={this.state.checkbox}\n\t\t\t\t\t\t\t\tclass=\"form-check-input\"\n\t\t\t\t\t\t\t\tonChange={() => this.setState({\n\t\t\t\t\t\t\t\t\tcheckbox: !this.state.checkbox\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\tid=\"checkInput\"/>\n\t\t\t\t\t\t\t<label \n\t\t\t\t\t\t\t\tclass=\"form-check-label\" \n\t\t\t\t\t\t\t\tfor=\"checkInput\">\n\t\t\t\t\t\t\t\tGarder ma session active\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div class=\"d-flex justify-content-center\">\n\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\tname=\"connexion\"\n\t\t\t\t\t\t\t\tonClick={() => this.checkValidity()}\n\t\t\t\t\t\t\t\tclass=\"btn btn-primary m-1\">\n\t\t\t\t\t\t\t\tConnexion\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t<button \n\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\tname=\"signup\"\n\t\t\t\t\t\t\t\tonClick={() => window.location.href = '/signup'}\n\t\t\t\t\t\t\t\tclass=\"btn btn-light m-1\">\n\t\t\t\t\t\t\t\tInscription\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\n\t}\n}","/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/pages/Logout.js",[],"/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/redux/store.js",[],"/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/redux/reducers/index.js",[],"/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/redux/reducers/user.js",["264"],"import { SET_USER, UNSET_USER } from \"../actionTypes\";\n\nconst initialState = {\n  user: undefined,\n}\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case SET_USER: {\n      const {content} = action.payload;\n      return {\n        ...state,\n        user: content,\n      };\n    }\n    case UNSET_USER: {\n      return {\n        ...state,\n        user: undefined,\n      };\n    }\n    default:\n      return state;\n  }\n}","/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/redux/actionTypes.js",[],"/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/redux/actions.js",[],"/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/pages/NewConference.js",["265","266","267"],"/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/pages/Conference.js",[],"/home/pierre-loup/fac/DEVREP/Projet Conf/ProjectDevRep/client/src/components/Loading.js",[],{"ruleId":"268","replacedBy":"269"},{"ruleId":"270","replacedBy":"271"},{"ruleId":"268","replacedBy":"272"},{"ruleId":"270","replacedBy":"273"},{"ruleId":"274","severity":1,"message":"275","line":2,"column":8,"nodeType":"276","messageId":"277","endLine":2,"endColumn":16},{"ruleId":"274","severity":1,"message":"278","line":3,"column":8,"nodeType":"276","messageId":"277","endLine":3,"endColumn":19},{"ruleId":"274","severity":1,"message":"279","line":35,"column":16,"nodeType":"276","messageId":"277","endLine":35,"endColumn":20},{"ruleId":"280","severity":1,"message":"281","line":137,"column":9,"nodeType":"282","messageId":"283","endLine":198,"endColumn":11},{"ruleId":"280","severity":1,"message":"281","line":97,"column":9,"nodeType":"282","messageId":"283","endLine":141,"endColumn":11},{"ruleId":"284","severity":1,"message":"285","line":101,"column":25,"nodeType":"286","endLine":101,"endColumn":28},{"ruleId":"284","severity":1,"message":"285","line":125,"column":29,"nodeType":"286","endLine":125,"endColumn":68},{"ruleId":"284","severity":1,"message":"285","line":128,"column":33,"nodeType":"286","endLine":128,"endColumn":111},{"ruleId":"287","severity":1,"message":"288","line":5,"column":5,"nodeType":"289","messageId":"290","endLine":8,"endColumn":6},{"ruleId":"284","severity":1,"message":"285","line":16,"column":25,"nodeType":"286","endLine":16,"endColumn":64},{"ruleId":"291","severity":1,"message":"292","line":154,"column":23,"nodeType":"293","messageId":"294","endLine":154,"endColumn":25},{"ruleId":"284","severity":1,"message":"285","line":79,"column":21,"nodeType":"286","endLine":79,"endColumn":24},{"ruleId":"284","severity":1,"message":"285","line":135,"column":29,"nodeType":"286","endLine":135,"endColumn":68},{"ruleId":"274","severity":1,"message":"295","line":2,"column":8,"nodeType":"276","messageId":"277","endLine":2,"endColumn":14},{"ruleId":"284","severity":1,"message":"285","line":61,"column":17,"nodeType":"286","endLine":61,"endColumn":60},{"ruleId":"284","severity":1,"message":"285","line":66,"column":17,"nodeType":"286","endLine":67,"endColumn":60},{"ruleId":"284","severity":1,"message":"285","line":68,"column":17,"nodeType":"286","endLine":68,"endColumn":54},{"ruleId":"268","replacedBy":"296"},{"ruleId":"270","replacedBy":"297"},{"ruleId":"284","severity":1,"message":"285","line":75,"column":21,"nodeType":"286","endLine":75,"endColumn":24},{"ruleId":"298","severity":1,"message":"299","line":88,"column":65,"nodeType":"286","endLine":88,"endColumn":88},{"ruleId":"300","severity":1,"message":"301","line":50,"column":12,"nodeType":"302","messageId":"303","endLine":50,"endColumn":38},{"ruleId":"304","severity":1,"message":"305","line":193,"column":35,"nodeType":"306","messageId":"307","endLine":193,"endColumn":37},{"ruleId":"284","severity":1,"message":"285","line":214,"column":21,"nodeType":"286","endLine":214,"endColumn":79},{"ruleId":"284","severity":1,"message":"285","line":217,"column":21,"nodeType":"286","endLine":218,"endColumn":138},{"ruleId":"298","severity":1,"message":"299","line":219,"column":25,"nodeType":"286","endLine":219,"endColumn":108},{"ruleId":"284","severity":1,"message":"285","line":222,"column":21,"nodeType":"286","endLine":223,"endColumn":137},{"ruleId":"284","severity":1,"message":"285","line":247,"column":21,"nodeType":"286","endLine":248,"endColumn":44},{"ruleId":"284","severity":1,"message":"285","line":249,"column":21,"nodeType":"286","endLine":251,"endColumn":45},{"ruleId":"284","severity":1,"message":"285","line":253,"column":21,"nodeType":"286","endLine":254,"endColumn":96},{"ruleId":"284","severity":1,"message":"285","line":264,"column":33,"nodeType":"286","endLine":265,"endColumn":100},{"ruleId":"284","severity":1,"message":"285","line":275,"column":45,"nodeType":"286","endLine":278,"endColumn":46},{"ruleId":"284","severity":1,"message":"285","line":121,"column":25,"nodeType":"286","endLine":121,"endColumn":63},{"ruleId":"284","severity":1,"message":"285","line":126,"column":25,"nodeType":"286","endLine":126,"endColumn":28},{"ruleId":"284","severity":1,"message":"285","line":132,"column":21,"nodeType":"286","endLine":132,"endColumn":60},{"ruleId":"287","severity":1,"message":"288","line":8,"column":5,"nodeType":"289","messageId":"290","endLine":12,"endColumn":6},{"ruleId":"287","severity":1,"message":"288","line":8,"column":5,"nodeType":"289","messageId":"290","endLine":10,"endColumn":6},{"ruleId":"304","severity":1,"message":"305","line":74,"column":35,"nodeType":"306","messageId":"307","endLine":74,"endColumn":37},{"ruleId":"284","severity":1,"message":"285","line":159,"column":17,"nodeType":"286","endLine":159,"endColumn":75},{"ruleId":"284","severity":1,"message":"285","line":163,"column":17,"nodeType":"286","endLine":164,"endColumn":134},{"ruleId":"298","severity":1,"message":"299","line":165,"column":21,"nodeType":"286","endLine":165,"endColumn":84},{"ruleId":"284","severity":1,"message":"285","line":168,"column":17,"nodeType":"286","endLine":169,"endColumn":133},{"ruleId":"284","severity":1,"message":"285","line":175,"column":21,"nodeType":"286","endLine":175,"endColumn":41},{"ruleId":"284","severity":1,"message":"285","line":185,"column":17,"nodeType":"286","endLine":186,"endColumn":40},{"ruleId":"284","severity":1,"message":"285","line":187,"column":17,"nodeType":"286","endLine":189,"endColumn":41},{"ruleId":"284","severity":1,"message":"285","line":191,"column":17,"nodeType":"286","endLine":192,"endColumn":92},{"ruleId":"284","severity":1,"message":"285","line":200,"column":29,"nodeType":"286","endLine":201,"endColumn":96},{"ruleId":"284","severity":1,"message":"285","line":209,"column":72,"nodeType":"286","endLine":209,"endColumn":75},{"ruleId":"284","severity":1,"message":"285","line":45,"column":21,"nodeType":"286","endLine":45,"endColumn":24},{"ruleId":"298","severity":1,"message":"299","line":46,"column":25,"nodeType":"286","endLine":46,"endColumn":108},{"ruleId":"284","severity":1,"message":"285","line":84,"column":21,"nodeType":"286","endLine":84,"endColumn":24},{"ruleId":"298","severity":1,"message":"299","line":85,"column":25,"nodeType":"286","endLine":85,"endColumn":108},{"ruleId":"284","severity":1,"message":"285","line":100,"column":21,"nodeType":"286","endLine":100,"endColumn":75},{"ruleId":"284","severity":1,"message":"285","line":103,"column":21,"nodeType":"286","endLine":103,"endColumn":81},{"ruleId":"284","severity":1,"message":"285","line":16,"column":15,"nodeType":"286","endLine":16,"endColumn":80},{"ruleId":"274","severity":1,"message":"308","line":5,"column":7,"nodeType":"276","messageId":"277","endLine":5,"endColumn":11},{"ruleId":"291","severity":1,"message":"309","line":72,"column":25,"nodeType":"293","messageId":"294","endLine":72,"endColumn":27},{"ruleId":"291","severity":1,"message":"292","line":90,"column":18,"nodeType":"293","messageId":"294","endLine":90,"endColumn":20},{"ruleId":"274","severity":1,"message":"310","line":7,"column":3,"nodeType":"276","messageId":"277","endLine":7,"endColumn":7},{"ruleId":"311","severity":1,"message":"312","line":34,"column":3,"nodeType":"313","endLine":34,"endColumn":13},{"ruleId":"291","severity":1,"message":"292","line":55,"column":32,"nodeType":"293","messageId":"294","endLine":55,"endColumn":34},{"ruleId":"291","severity":1,"message":"292","line":56,"column":38,"nodeType":"293","messageId":"294","endLine":56,"endColumn":40},{"ruleId":"291","severity":1,"message":"292","line":161,"column":23,"nodeType":"293","messageId":"294","endLine":161,"endColumn":25},{"ruleId":"291","severity":1,"message":"292","line":148,"column":17,"nodeType":"293","messageId":"294","endLine":148,"endColumn":19},{"ruleId":"291","severity":1,"message":"292","line":156,"column":30,"nodeType":"293","messageId":"294","endLine":156,"endColumn":32},{"ruleId":"284","severity":1,"message":"285","line":105,"column":9,"nodeType":"286","endLine":105,"endColumn":48},{"ruleId":"314","severity":1,"message":"315","line":7,"column":1,"nodeType":"316","endLine":25,"endColumn":2},{"ruleId":"291","severity":1,"message":"292","line":184,"column":37,"nodeType":"293","messageId":"294","endLine":184,"endColumn":39},{"ruleId":"291","severity":1,"message":"292","line":195,"column":23,"nodeType":"293","messageId":"294","endLine":195,"endColumn":25},{"ruleId":"291","severity":1,"message":"292","line":212,"column":30,"nodeType":"293","messageId":"294","endLine":212,"endColumn":32},"no-native-reassign",["317"],"no-negated-in-lhs",["318"],["317"],["318"],"no-unused-vars","'Messages' is defined but never used.","Identifier","unusedVar","'PostMessage' is defined but never used.","'data' is assigned a value but never used.","no-unreachable","Unreachable code.","ReturnStatement","unreachableCode","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Search' is defined but never used.",["317"],["318"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-cond-assign","Expected a conditional expression and instead saw an assignment.","AssignmentExpression","missing","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'DATA' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'Link' is defined but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]